{"version":3,"file":"CurveLineSeries.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/timeline/CurveLineSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\r\nimport type { AxisRendererCurveX } from \"./AxisRendererCurveX\";\r\nimport type { Bullet } from \"../../core/render/Bullet\";\r\nimport type { CurveChart } from \"./CurveChart\";\r\n\r\nimport { Graphics } from \"../../core/render/Graphics\";\r\nimport { LineSeries, ILineSeriesPrivate, ILineSeriesSettings, ILineSeriesDataItem, ILineSeriesAxisRange } from \"../xy/series/LineSeries\";\r\n\r\n\r\nexport interface ICurveLineSeriesDataItem extends ILineSeriesDataItem {\r\n}\r\n\r\nexport interface ICurveLineSeriesSettings extends ILineSeriesSettings {\r\n}\r\n\r\nexport interface ICurveLineSeriesPrivate extends ILineSeriesPrivate {\r\n}\r\n\r\nexport interface ICurveLineSeriesAxisRange extends ILineSeriesAxisRange {\r\n}\r\n\r\n/**\r\n * A line series for use in a [[CurveChart]], [[SerpetineChart]], or\r\n * a [[SpiralChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/timeline/} for more info\r\n * @since 5.12.0\r\n * @important\r\n */\r\nexport class CurveLineSeries extends LineSeries {\r\n\r\n\tdeclare public _settings: ICurveLineSeriesSettings;\r\n\tdeclare public _privateSettings: ICurveLineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ICurveLineSeriesDataItem;\r\n\tdeclare public _axisRangeType: ICurveLineSeriesAxisRange;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tdeclare public chart: CurveChart | undefined;\r\n\r\n\tpublic static className: string = \"CurveLineSeries\";\r\n\tpublic static classNames: Array<string> = LineSeries.classNames.concat([CurveLineSeries.className]);\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.set(\"maskContent\", false);\r\n\t\tthis.bulletsContainer.set(\"maskContent\", false);\r\n\t\tthis.bulletsContainer.set(\"mask\", Graphics.new(this._root, {}));\r\n\t}\r\n\r\n\tprotected _handleMaskBullets() {\r\n\r\n\t}\r\n\r\n\tpublic _updateChildren(): void {\r\n\t\tsuper._updateChildren();\r\n\t\tif (!this.get(\"maskBullets\")) {\r\n\t\t\tthis.bulletsContainer.remove(\"mask\");\r\n\t\t}\r\n\t}\r\n\r\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\r\n\r\n\t\tconst xRenderer = this.get(\"xAxis\").get(\"renderer\") as AxisRendererCurveX;\r\n\t\treturn xRenderer.positionToPoint(positionX, positionY);\r\n\t}\r\n\r\n\tprotected _shouldInclude(position: number): boolean {\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tif (position < xAxis.get(\"start\", 0) || position > xAxis.get(\"end\", 1)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\tprotected _shouldShowBullet(positionX: number, _positionY: number): boolean {\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\tif (positionX < xAxis.get(\"start\", 0) || positionX > xAxis.get(\"end\", 1)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn this._showBullets;\r\n\t}\r\n\r\n\tpublic _positionBullet(bullet: Bullet) {\r\n\r\n\t\tlet sprite = bullet.get(\"sprite\");\r\n\t\tif (sprite) {\r\n\t\t\tconst dataItem = sprite.dataItem as any;\r\n\r\n\t\t\tconst diLocationX = dataItem.get(\"locationX\", 0.5);\r\n\t\t\tconst diLocationY = dataItem.get(\"locationY\", 0.5);\r\n\r\n\t\t\tconst locationX = bullet.get(\"locationX\", diLocationX);\r\n\t\t\tconst locationY = bullet.get(\"locationY\", diLocationY);\r\n\r\n\t\t\tconst series = dataItem.component;\r\n\r\n\t\t\tconst xAxis = series.get(\"xAxis\");\r\n\t\t\tconst yAxis = series.get(\"yAxis\");\r\n\r\n\t\t\tlet positionX = 0;\r\n\t\t\tlet vcx = series.get(\"vcx\", 1);\r\n\t\t\tlet vcy = series.get(\"vcy\", 1);\r\n\r\n\t\t\tif (this.get(\"openValueXField\")) {\r\n\t\t\t\tconst p0 = xAxis.getDataItemPositionX(dataItem, series._xOpenField, diLocationX, vcx);\r\n\t\t\t\tconst p1 = xAxis.getDataItemPositionX(dataItem, series._xField, diLocationX, vcx);\r\n\t\t\t\tpositionX = p0 + (p1 - p0) * locationX;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, series._xField, locationX, vcx);\r\n\t\t\t}\r\n\t\t\tlet positionY = 0;\r\n\t\t\tif (this.get(\"openValueYField\")) {\r\n\t\t\t\tconst p0 = yAxis.getDataItemPositionY(dataItem, series._yOpenField, diLocationY, vcy);\r\n\t\t\t\tconst p1 = yAxis.getDataItemPositionY(dataItem, series._yField, diLocationY, vcy);\r\n\t\t\t\tpositionY = p0 + (p1 - p0) * locationY;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, series._yField, locationY, vcy);\r\n\t\t\t}\r\n\r\n\t\t\tif (series._shouldShowBullet(positionX, positionY)) {\r\n\t\t\t\tsprite.setPrivate(\"visible\", true);\r\n\r\n\t\t\t\tconst point = series.getPoint(positionX, positionY);\r\n\r\n\t\t\t\tsprite.setAll({\r\n\t\t\t\t\tx: point.x,\r\n\t\t\t\t\ty: point.y\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tsprite.setPrivate(\"visible\", false);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n"]}