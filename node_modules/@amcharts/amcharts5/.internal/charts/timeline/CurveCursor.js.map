{"version":3,"file":"CurveCursor.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/timeline/CurveCursor.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IPoint } from \"../../core/util/IPoint\";\nimport type { Tooltip } from \"../../core/render/Tooltip\";\nimport type { CurveChart } from \"./CurveChart\";\nimport type { AxisRendererCurveX } from \"./AxisRendererCurveX\";\nimport type { AxisRendererCurveY } from \"./AxisRendererCurveY\";\nimport type { Axis } from \"../xy/axes/Axis\";\n\nimport { XYCursor, IXYCursorSettings, IXYCursorPrivate, IXYCursorEvents } from \"../xy/XYCursor\";\n\nimport * as $utils from \"../../core/util/Utils\";\nimport * as $array from \"../../core/util/Array\";\n\nexport interface ICurveCursorSettings extends IXYCursorSettings {\n\n\t/**\n\t * A target X-axis.\n\t * \n\t * Differently from the `XYChart`, this setting is required for cursor to work.\n\t */\n\txAxis: Axis<AxisRendererCurveX>;\n\n\t/**\n\t * A target Y-axis.\n\t * \n\t * Differently from the `XYChart`, this setting is required for cursor to work.\n\t */\n\tyAxis: Axis<AxisRendererCurveY>;\n\n}\n\nexport interface ICurveCursorPrivate extends IXYCursorPrivate {\n}\n\nexport interface ICurveCursorEvents extends IXYCursorEvents {\n}\n\n/**\n * A chart cursor for use in a [[CurveChart]], [[SerpetineChart]], or\n * a [[SpiralChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/timeline/} for more info\n * @since 5.12.0\n * @important\n */\nexport class CurveCursor extends XYCursor {\n\tpublic static className: string = \"CurveCursor\";\n\tpublic static classNames: Array<string> = XYCursor.classNames.concat([CurveCursor.className]);\n\n\tdeclare public _settings: ICurveCursorSettings;\n\tdeclare public _privateSettings: ICurveCursorPrivate;\n\tdeclare public _events: ICurveCursorEvents;\n\n\t/**\n\t * A chart cursor is attached to.\n\t */\n\tdeclare public chart: CurveChart | undefined;\n\n\tprotected _afterNew() {\n\t\tthis._settings.themeTags = $utils.mergeTags(this._settings.themeTags, [\"curve\", \"cursor\"]);\n\n\t\tsuper._afterNew();\n\t}\n\n\tprotected _handleXLine() {\n\n\t}\n\n\tprotected _handleYLine() {\n\n\t}\n\n\tprotected _getPosition(point: IPoint): IPoint {\n\t\tconst xRenderer = this.get(\"xAxis\").get(\"renderer\") as AxisRendererCurveX;\n\t\treturn xRenderer.pointToPosition(point);\n\t}\n\n\tprotected _getPoint(positionX: number, positionY: number): IPoint {\n\t\tconst xRenderer = this.get(\"xAxis\").get(\"renderer\") as AxisRendererCurveX;\n\t\treturn xRenderer.positionToPoint(positionX, positionY);\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic updateLayout() {\n\n\t}\n\n\n\tprotected _updateLines(x: number, y: number) {\n\t\tif (!this._tooltipX) {\n\t\t\tthis._drawXLine(x, y);\n\t\t}\n\t\tif (!this._tooltipY) {\n\t\t\tthis._drawYLine(x, y);\n\t\t}\n\t}\n\n\tprotected _drawXLine(_x: number, _y: number) {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst renderer = xAxis.get(\"renderer\");\n\t\tconst position = renderer.toAxisPosition(this.getPrivate(\"positionX\", 0));\n\t\tconst p0 = renderer.positionToPoint(position, yAxis.get(\"start\", 0));\n\t\tconst p1 = renderer.positionToPoint(position, yAxis.get(\"end\", 1));\n\n\t\tthis.lineX.set(\"draw\", (display) => {\n\t\t\tdisplay.moveTo(p0.x, p0.y);\n\t\t\tdisplay.lineTo(p1.x, p1.y);\n\t\t})\n\n\t}\n\n\tprotected _drawYLine(_x: number, _y: number) {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst renderer = yAxis.get(\"renderer\");\n\t\tconst position = renderer.toAxisPosition(this.getPrivate(\"positionY\", 0));\n\n\n\t\tconst points = renderer.getPoints(xAxis.get(\"start\", 0), position, xAxis.get(\"end\", 1), position);\n\t\tif (points) {\n\t\t\tif (position > yAxis.get(\"start\", 0) && position < yAxis.get(\"end\", 1)) {\n\t\t\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\t\t\tif (points.length > 0) {\n\t\t\t\t\t\tdisplay.moveTo(points[0].x, points[0].y);\n\t\t\t\t\t\t$array.each(points, (point) => {\n\t\t\t\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.lineY.set(\"draw\", (display) => {\n\t\t\t\t\tdisplay.clear();\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _updateXLine(tooltip: Tooltip) {\n\t\tlet point = tooltip.get(\"pointTo\");\n\t\tif (point) {\n\t\t\tthis._drawXLine(point.x, point.y);\n\t\t}\n\t}\n\n\tprotected _updateYLine(tooltip: Tooltip) {\n\t\tlet point = tooltip.get(\"pointTo\")\n\t\tif (point) {\n\t\t\tthis._drawYLine(point.x, point.y);\n\t\t}\n\t}\n\n\tprotected _inPlot(): boolean {\n\t\tconst chart = this.chart;\n\n\t\tif (chart) {\n\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _updateSelection() {\n\t\tthis.selection.set(\"draw\", (display) => {\n\t\t\tconst behavior = this.get(\"behavior\");\n\n\t\t\tlet xAxis = this.get(\"xAxis\");\n\t\t\tlet yAxis = this.get(\"yAxis\");\n\n\t\t\tlet downPositionX = xAxis.toAxisPosition(this.getPrivate(\"downPositionX\", 0));\n\t\t\tlet downPositionY = yAxis.toAxisPosition(this.getPrivate(\"downPositionY\", 0));\n\n\t\t\tlet positionX = xAxis.toAxisPosition(this.getPrivate(\"positionX\", 0));\n\t\t\tlet positionY = yAxis.toAxisPosition(this.getPrivate(\"positionY\", 0));\n\n\t\t\tif (behavior == \"zoomX\" || behavior == \"selectX\") {\n\t\t\t\tdownPositionY = yAxis.get(\"start\", 0);\n\t\t\t\tpositionY = yAxis.get(\"end\", 1);\n\t\t\t}\n\t\t\telse if (behavior == \"zoomY\" || behavior == \"selectY\") {\n\t\t\t\tdownPositionX = xAxis.get(\"start\", 0);\n\t\t\t\tpositionX = xAxis.get(\"end\", 1);\n\t\t\t}\n\n\t\t\tconst points = xAxis.get(\"renderer\").getPoints(downPositionX, downPositionY, positionX, positionY);\n\n\t\t\tdisplay.moveTo(points[0].x, points[0].y);\n\t\t\t$array.each(points, (point) => {\n\t\t\t\tdisplay.lineTo(point.x, point.y);\n\t\t\t})\n\t\t\tdisplay.closePath();\n\t\t})\n\t}\n}\n"]}