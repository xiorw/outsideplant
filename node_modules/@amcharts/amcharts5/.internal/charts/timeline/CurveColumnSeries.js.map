{"version":3,"file":"CurveColumnSeries.js","sourceRoot":"","sources":["../../../../../src/.internal/charts/timeline/CurveColumnSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { DataItem } from \"../../core/render/Component\";\nimport type { IPoint } from \"../../core/util/IPoint\";\nimport type { AxisRendererCurveX } from \"./AxisRendererCurveX\";\nimport type { Bullet } from \"../../core/render/Bullet\";\nimport type { CurveChart } from \"./CurveChart\";\n\nimport { BaseColumnSeries, IBaseColumnSeriesPrivate, IBaseColumnSeriesSettings, IBaseColumnSeriesDataItem, IBaseColumnSeriesAxisRange } from \"../xy/series/BaseColumnSeries\";\nimport { Graphics } from \"../../core/render/Graphics\";\nimport { Template } from \"../../core/util/Template\";\nimport { ListTemplate } from \"../../core/util/List\";\nimport { Polygon } from \"../../core/render/Polygon\";\n\nimport * as $math from \"../../core/util/Math\";\nimport * as $utils from \"../../core/util/Utils\";\n\n\nexport interface ICurveColumnSeriesDataItem extends IBaseColumnSeriesDataItem {\n}\n\nexport interface ICurveColumnSeriesSettings extends IBaseColumnSeriesSettings {\n}\n\nexport interface ICurveColumnSeriesPrivate extends IBaseColumnSeriesPrivate {\n}\n\nexport interface ICurveColumnSeriesAxisRange extends IBaseColumnSeriesAxisRange {\n\n\t/**\n\t * List of columns in a range.\n\t */\n\tcolumns: ListTemplate<Polygon>\n\n}\n\n/**\n * A column series for use in a [[CurveChart]], [[SerpetineChart]], or\n * a [[SpiralChart]].\n *\n * @see {@link https://www.amcharts.com/docs/v5/charts/timeline/} for more info\n * @since 5.12.0\n * @important\n */\nexport class CurveColumnSeries extends BaseColumnSeries {\n\n\tdeclare public _settings: ICurveColumnSeriesSettings;\n\tdeclare public _privateSettings: ICurveColumnSeriesPrivate;\n\tdeclare public _dataItemSettings: ICurveColumnSeriesDataItem;\n\tdeclare public _axisRangeType: ICurveColumnSeriesAxisRange;\n\n\t/**\n\t * @ignore\n\t */\n\tpublic makeColumn(dataItem: DataItem<this[\"_dataItemSettings\"]>, listTemplate: ListTemplate<Polygon>): Polygon {\n\t\tconst column = this.mainContainer.children.push(listTemplate.make());\n\t\tcolumn._setDataItem(dataItem);\n\t\tlistTemplate.push(column);\n\t\treturn column;\n\t}\n\n\t/**\n\t * A [[TemplateList]] of all columns in series.\n\t *\n\t * `columns.template` can be used to set default settings for all columns,\n\t * or to change on existing ones.\n\t *\n\t * @default new ListTemplate<Polygon>\n\t */\n\tpublic readonly columns: ListTemplate<Polygon> = this.addDisposer(new ListTemplate(\n\t\tTemplate.new({}),\n\t\t() => Polygon._new(this._root, {\n\t\t\tposition: \"absolute\",\n\t\t\tthemeTags: $utils.mergeTags(this.columns.template.get(\"themeTags\", []), [\"curve\", \"series\", \"column\"])\n\t\t}, [this.columns.template])\n\t));\n\n\tpublic static className: string = \"CurveColumnSeries\";\n\tpublic static classNames: Array<string> = BaseColumnSeries.classNames.concat([CurveColumnSeries.className]);\n\n\t/**\n\t * A chart series belongs to.\n\t */\n\tdeclare public chart: CurveChart | undefined;\n\n\tprotected _afterNew() {\n\t\tsuper._afterNew();\n\t\tthis.set(\"maskContent\", false);\n\t\tthis.bulletsContainer.set(\"maskContent\", false);\n\t\tthis.bulletsContainer.set(\"mask\", Graphics.new(this._root, {}));\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic getPoint(positionX: number, positionY: number): IPoint {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst rendererX = xAxis.get(\"renderer\") as AxisRendererCurveX;\n\t\treturn rendererX.positionToPoint(positionX, positionY);\n\t}\n\n\tprotected _updateSeriesGraphics(dataItem: DataItem<this[\"_dataItemSettings\"]>, graphics: Graphics, l: number, r: number, t: number, b: number) {\n\n\t\tgraphics.setPrivate(\"visible\", true);\n\n\t\tdataItem.setRaw(\"left\", l);\n\t\tdataItem.setRaw(\"right\", r);\n\t\tdataItem.setRaw(\"top\", t);\n\t\tdataItem.setRaw(\"bottom\", b);\n\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tconst rendererX = xAxis.get(\"renderer\") as AxisRendererCurveX;\n\n\t\tconst yAxis = this.get(\"yAxis\");\n\t\tconst start = yAxis.get(\"start\", 0);\n\t\tconst end = yAxis.get(\"end\", 1);\n\n\t\tt = $math.fitToRange(t, start, end);\n\t\tb = $math.fitToRange(b, start, end);\n\n\t\tconst points = rendererX.getPoints(l, t, r, b);\n\n\t\tconst polygon = graphics as Polygon;\n\n\t\tpolygon.set(\"points\", points);\n\t}\n\n\tprotected _shouldInclude(position: number): boolean {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tif (position < xAxis.get(\"start\", 0) || position > xAxis.get(\"end\", 1)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprotected _shouldShowBullet(positionX: number, _positionY: number): boolean {\n\t\tconst xAxis = this.get(\"xAxis\");\n\t\tif (positionX < xAxis.get(\"start\", 0) || positionX > xAxis.get(\"end\", 1)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this._showBullets;\n\t}\n\n\tpublic _positionBullet(bullet: Bullet) {\n\n\t\tlet sprite = bullet.get(\"sprite\");\n\t\tif (sprite) {\n\t\t\tconst dataItem = sprite.dataItem as any;\n\n\t\t\tconst diLocationX = dataItem.get(\"locationX\", 0.5);\n\t\t\tconst diLocationY = dataItem.get(\"locationY\", 0.5);\n\n\t\t\tconst locationX = bullet.get(\"locationX\", diLocationX);\n\t\t\tconst locationY = bullet.get(\"locationY\", diLocationY);\n\n\t\t\tconst series = dataItem.component;\n\n\t\t\tconst xAxis = series.get(\"xAxis\");\n\t\t\tconst yAxis = series.get(\"yAxis\");\n\n\t\t\tlet positionX = 0;\n\t\t\tlet vcx = series.get(\"vcx\", 1);\n\t\t\tlet vcy = series.get(\"vcy\", 1);\n\n\t\t\tif (this.get(\"openValueXField\")) {\n\t\t\t\tconst p0 = xAxis.getDataItemPositionX(dataItem, series._xOpenField, diLocationX, vcx);\n\t\t\t\tconst p1 = xAxis.getDataItemPositionX(dataItem, series._xField, diLocationX, vcx);\n\t\t\t\tpositionX = p0 + (p1 - p0) * locationX;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpositionX = xAxis.getDataItemPositionX(dataItem, series._xField, locationX, vcx);\n\t\t\t}\n\t\t\tlet positionY = 0;\n\t\t\tif (this.get(\"openValueYField\")) {\n\t\t\t\tconst p0 = yAxis.getDataItemPositionY(dataItem, series._yOpenField, diLocationY, vcy);\n\t\t\t\tconst p1 = yAxis.getDataItemPositionY(dataItem, series._yField, diLocationY, vcy);\n\t\t\t\tpositionY = p0 + (p1 - p0) * locationY;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpositionY = yAxis.getDataItemPositionY(dataItem, series._yField, locationY, vcy);\n\t\t\t}\n\n\t\t\tif (series._shouldShowBullet(positionX, positionY)) {\n\t\t\t\tsprite.setPrivate(\"visible\", true);\n\n\t\t\t\tconst point = series.getPoint(positionX, positionY);\n\n\t\t\t\tsprite.setAll({\n\t\t\t\t\tx: point.x,\n\t\t\t\t\ty: point.y\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsprite.setPrivate(\"visible\", false);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected _handleMaskBullets() {\n\n\t}\n\n\tpublic _updateChildren(): void {\n\t\tsuper._updateChildren();\n\t\tif(!this.get(\"maskBullets\")) {\n\t\t\tthis.bulletsContainer.remove(\"mask\");\n\t\t}\t\n\t}\n\n\tprotected _processAxisRange(axisRange: this[\"_axisRangeType\"]) {\n\t\tsuper._processAxisRange(axisRange);\n\t\taxisRange.columns = new ListTemplate(\n\t\t\tTemplate.new({}),\n\t\t\t() => Polygon._new(this._root, {\n\t\t\t\tposition: \"absolute\",\n\t\t\t\tthemeTags: $utils.mergeTags(axisRange.columns.template.get(\"themeTags\", []), [\"curves\", \"series\", \"column\"]),\n\t\t\t}, [this.columns.template, axisRange.columns.template])\n\t\t);\n\t}\n}\n"]}