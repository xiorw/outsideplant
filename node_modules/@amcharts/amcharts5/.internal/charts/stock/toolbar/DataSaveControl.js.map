{"version":3,"file":"DataSaveControl.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/toolbar/DataSaveControl.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IDropdownListItem } from \"./DropdownList\";\r\n\r\nimport { DropdownListControl, IDropdownListControlSettings, IDropdownListControlPrivate, IDropdownListControlEvents } from \"./DropdownListControl\";\r\nimport { DrawingControl } from \"./DrawingControl\";\r\nimport { IndicatorControl } from \"./IndicatorControl\";\r\nimport { StockIcons } from \"./StockIcons\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IDataSaveControlItem extends IDropdownListItem {\r\n}\r\n\r\nexport interface IDataSaveControlSettings extends IDropdownListControlSettings {\r\n\t/**\r\n\t * If set to `true`, all changes to chart's drawings and indicators will be\r\n\t * automatically saved to browser local storage and restored on next load.\r\n\t *\r\n\t * @default false\r\n\t */\r\n\tautoSave?: boolean;\r\n\r\n\t/**\r\n\t * A unique indentifier for local storage.\r\n\t *\r\n\t * Will try to use chart's container ID if not set.\r\n\t *\r\n\t * Consider setting it if you have multipl [[StockChart]] on the same page.\r\n\t */\r\n\tstorageId?: string;\r\n}\r\n\r\nexport interface IDataSaveControlPrivate extends IDropdownListControlPrivate {\r\n\tdrawingControl?: DrawingControl;\r\n\tindicatorControl?: IndicatorControl;\r\n\tstorageId?: string;\r\n}\r\n\r\nexport interface IDataSaveControlEvents extends IDropdownListControlEvents {\r\n\r\n\t/**\r\n\t * Invoked when drawing/indicator data is serialized and saved to local\r\n\t * storage.\r\n\t */\r\n\tsaved: {\r\n\t\tdrawings: string;\r\n\t\tindicators: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when drawing/indicator data is loaded from local storage and\r\n\t * restored on chart.\r\n\t */\r\n\trestored: {\r\n\t\tdrawings: string;\r\n\t\tindicators: string;\r\n\t};\r\n\r\n\t/**\r\n\t * Invoked when local storage is cleared.\r\n\t */\r\n\tcleared: {};\r\n\r\n}\r\n\r\n/**\r\n * A control that can be used to serialize indicators and drawings, save them\r\n * to local storage, and restore as needed.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/toolbar/data-save-control/} for more info\r\n * @since 5.7.0\r\n */\r\nexport class DataSaveControl extends DropdownListControl {\r\n\tpublic static className: string = \"DataSaveControl\";\r\n\tpublic static classNames: Array<string> = DropdownListControl.classNames.concat([DataSaveControl.className]);\r\n\r\n\tdeclare public _settings: IDataSaveControlSettings;\r\n\tdeclare public _privateSettings: IDataSaveControlPrivate;\r\n\tdeclare public _events: IDataSaveControlEvents;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.setPrivate(\"storageId\", window.location.href + \"-\" + this.root.dom.id);\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tconst dropdown = this.getPrivate(\"dropdown\")!;\r\n\r\n\t\t// Load local storage\r\n\t\tif (localStorage && localStorage.getItem(this._getStorageId(\"autosave\")) == \"1\") {\r\n\t\t\tthis.root.events.once(\"frameended\", () => {\r\n\t\t\t\tthis.restoreData();\r\n\t\t\t\tthis.set(\"autoSave\", true);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tdropdown.events.on(\"changed\", (ev) => {\r\n\t\t\tif (ev.item.id == \"autosave\") {\r\n\t\t\t\tconst autoSave = !ev.item.checked;\r\n\t\t\t\tthis.set(\"autoSave\", autoSave);\r\n\t\t\t\tif (autoSave) {\r\n\t\t\t\t\tthis.saveData();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tdropdown.events.on(\"invoked\", (ev) => {\r\n\t\t\tif (ev.item.id == \"save\") {\r\n\t\t\t\tthis.saveData();\r\n\t\t\t}\r\n\t\t\telse if (ev.item.id == \"restore\") {\r\n\t\t\t\tthis.restoreData();\r\n\t\t\t}\r\n\t\t\telse if (ev.item.id == \"clear\") {\r\n\t\t\t\tthis.clearData();\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t\tthis.on(\"active\", () => {\r\n\t\t\tthis._populateInputs();\r\n\t\t});\r\n\r\n\t\tstockChart.events.on(\"drawingsupdated\", (_ev) => {\r\n\t\t\tif (this.get(\"autoSave\")) {\r\n\t\t\t\tthis.saveData();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tstockChart.events.on(\"indicatorsupdated\", (_ev) => {\r\n\t\t\tif (this.get(\"autoSave\")) {\r\n\t\t\t\tthis.saveData();\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tpublic _beforeChanged() {\r\n\t\tsuper._beforeChanged();\r\n\r\n\t\tif (this.isDirty(\"autoSave\") && localStorage) {\r\n\t\t\tconst autoSave = this.get(\"autoSave\", false);\r\n\t\t\tif (autoSave) {\r\n\t\t\t\tlocalStorage.setItem(this._getStorageId(\"autosave\"), \"1\");\r\n\t\t\t\t//this.saveData();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlocalStorage.removeItem(this._getStorageId(\"autosave\"));\r\n\t\t\t\t//this.clearData();\r\n\t\t\t}\r\n\t\t\tthis._populateInputs();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic saveData(): void {\r\n\t\tif (localStorage) {\r\n\t\t\tconst drawingControl = this._getDrawingControl();\r\n\t\t\tconst indicatorControl = this._getIndicatorControl();\r\n\t\t\tconst drawings = drawingControl.serializeDrawings(\"string\", \"  \") as string;\r\n\t\t\tconst indicators = indicatorControl.serializeIndicators(\"string\", \"  \") as string;\r\n\t\t\tif (drawings == \"[]\") {\r\n\t\t\t\tlocalStorage.removeItem(this._getStorageId(\"drawings\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlocalStorage.setItem(this._getStorageId(\"drawings\"), drawings);\r\n\t\t\t}\r\n\t\t\tif (indicators == \"[]\") {\r\n\t\t\t\tlocalStorage.removeItem(this._getStorageId(\"indicators\"));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tlocalStorage.setItem(this._getStorageId(\"indicators\"), indicators);\r\n\t\t\t}\r\n\t\t\tthis.events.dispatch(\"saved\", {\r\n\t\t\t\ttarget: this,\r\n\t\t\t\ttype: \"saved\",\r\n\t\t\t\tdrawings: drawings,\r\n\t\t\t\tindicators: indicators\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic restoreData(): void {\r\n\t\tif (localStorage) {\r\n\t\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\t\tstockChart.panels.each((panel) => {\r\n\t\t\t\tpanel.drawings.each((drawing) => {\r\n\t\t\t\t\tdrawing.data.clear();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\t\t\tstockChart.indicators.clear();\r\n\r\n\t\t\tconst drawingControl = this._getDrawingControl();\r\n\t\t\tconst indicatorControl = this._getIndicatorControl();\r\n\t\t\tconst drawings = localStorage.getItem(this._getStorageId(\"drawings\")) || \"[]\";\r\n\t\t\tconst indicators = localStorage.getItem(this._getStorageId(\"indicators\")) || \"[]\";\r\n\r\n\t\t\tdrawingControl.unserializeDrawings(drawings);\r\n\t\t\tindicatorControl.unserializeIndicators(indicators);\r\n\t\t\tthis.events.dispatch(\"restored\", {\r\n\t\t\t\ttarget: this,\r\n\t\t\t\ttype: \"restored\",\r\n\t\t\t\tdrawings: drawings,\r\n\t\t\t\tindicators: indicators\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tpublic clearData(): void {\r\n\t\tif (localStorage) {\r\n\t\t\tlocalStorage.removeItem(this._getStorageId(\"drawings\"));\r\n\t\t\tlocalStorage.removeItem(this._getStorageId(\"indicators\"));\r\n\t\t\tthis.events.dispatch(\"cleared\", {\r\n\t\t\t\ttarget: this,\r\n\t\t\t\ttype: \"cleared\"\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _getDefaultIcon(): SVGElement {\r\n\t\treturn StockIcons.getIcon(\"Save\");\r\n\t}\r\n\r\n\tprotected _populateInputs(): void {\r\n\t\tconst dropdown = this.getPrivate(\"dropdown\")!;\r\n\t\tconst items = dropdown.get(\"items\", []);\r\n\t\tconst autoSave = this.get(\"autoSave\", false);\r\n\t\tconst isSavedData = localStorage && (localStorage.getItem(this._getStorageId(\"drawings\")) !== null || localStorage.getItem(this._getStorageId(\"indicators\")) !== null);\r\n\t\t$array.each(items, (item) => {\r\n\t\t\tif (!localStorage) {\r\n\t\t\t\titem.disabled = true;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"restore\") {\r\n\t\t\t\titem.disabled = autoSave || !isSavedData;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"clear\") {\r\n\t\t\t\titem.disabled = !isSavedData;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"save\") {\r\n\t\t\t\titem.disabled = autoSave;\r\n\t\t\t}\r\n\t\t\telse if (item.id == \"autosave\") {\r\n\t\t\t\titem.checked = autoSave;\r\n\t\t\t}\r\n\t\t})\r\n\t\tdropdown.rebuildList();\r\n\t}\r\n\r\n\tprotected _getStorageId(bucket: string): string {\r\n\t\treturn \"am5-stock-\" + this.get(\"storageId\", this.getPrivate(\"storageId\", \"\")) + \"-\" + bucket;\r\n\t}\r\n\r\n\tprotected _getDrawingControl(): DrawingControl {\r\n\r\n\t\tlet drawingControl: DrawingControl | undefined = this.getPrivate(\"drawingControl\");\r\n\t\tif (drawingControl) {\r\n\t\t\treturn drawingControl;\r\n\t\t}\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tdrawingControl = stockChart.getControl(\"DrawingControl\") as DrawingControl;\r\n\t\tif (!drawingControl) {\r\n\t\t\tdrawingControl = DrawingControl.new(this.root, {\r\n\t\t\t\tstockChart: stockChart\r\n\t\t\t});\r\n\t\t\tthis.setPrivate(\"drawingControl\", drawingControl);\r\n\t\t}\r\n\t\treturn drawingControl;\r\n\t}\r\n\r\n\tprotected _getIndicatorControl(): IndicatorControl {\r\n\r\n\t\tlet indicatorControl: IndicatorControl | undefined = this.getPrivate(\"indicatorControl\");\r\n\t\tif (indicatorControl) {\r\n\t\t\treturn indicatorControl;\r\n\t\t}\r\n\r\n\t\tconst stockChart = this.get(\"stockChart\");\r\n\t\tindicatorControl = stockChart.getControl(\"IndicatorControl\") as IndicatorControl;\r\n\t\tif (!indicatorControl) {\r\n\t\t\tindicatorControl = IndicatorControl.new(this.root, {\r\n\t\t\t\tstockChart: stockChart\r\n\t\t\t});\r\n\t\t\tthis.setPrivate(\"indicatorControl\", indicatorControl);\r\n\t\t}\r\n\t\treturn indicatorControl;\r\n\t}\r\n\r\n}"]}