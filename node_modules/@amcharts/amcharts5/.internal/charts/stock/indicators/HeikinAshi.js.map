{"version":3,"file":"HeikinAshi.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/HeikinAshi.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAA0E,MAAM,kBAAkB,CAAC;AAC1H,OAAO,EAAE,iBAAiB,EAAE,MAAM,mCAAmC,CAAC;AAKtE,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AACnD,OAAO,KAAK,KAAK,MAAM,yBAAyB,CAAC;AAuBjD;;;;GAIG;AACH,MAAM,OAAO,UAAW,SAAQ,cAAc;IAA9C;;QAaC;;;;mBAAwD,CAAC;oBACxD,GAAG,EAAE,iBAAiB;oBACtB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC;oBACnD,IAAI,EAAE,OAAO;iBACb,EAAE;oBACF,GAAG,EAAE,iBAAiB;oBACtB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC;oBACnD,IAAI,EAAE,OAAO;iBACb,CAAC;WAAC;IAuFJ,CAAC;IApFO,SAAS;QACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACnC,KAAK,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAEM,aAAa;QACnB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YAC/D,SAAS,EAAE,CAAC,WAAW,CAAC;YACxB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,QAAQ;YACrB,eAAe,EAAE,SAAS;YAC1B,WAAW,EAAE,SAAS;YACtB,cAAc,EAAE,SAAS;YACzB,eAAe,EAAE,SAAS;YAC1B,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;YAC/B,IAAI,EAAE,SAAS;SACf,CAAC,CAAC,CAAA;IACJ,CAAC;IAEM,eAAe;QACrB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,MAAM,eAAe,GAAG,iBAAiB,CAAC;QAC1C,MAAM,eAAe,GAAG,iBAAiB,CAAC;QAE1C,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;YACnE,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7C,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;YAC7C,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;YACrF,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,kBAAkB,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;YACrF,IAAI,CAAC,aAAa,EAAE,CAAC;SACrB;IACF,CAAC;IAED;;OAEG;IACI,WAAW;QACjB,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;YAE1B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YAEpD,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,MAAM,IAAI,GAAQ,EAAE,CAAC;gBAErB,MAAM,aAAa,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;gBACnC,IAAI,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;gBAClD,IAAI,SAAS,GAAG,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;gBAE/C,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,EAAE;oBAEnC,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBACxC,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACrC,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;oBACxC,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;oBAEtC,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;wBAEjG,MAAM,QAAQ,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjD,MAAM,OAAO,GAAG,CAAC,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;wBAE3C,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;wBAClD,MAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;wBAEhD,IAAI,CAAC,IAAI,CAAC;4BACT,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC;4BAC9B,OAAO,EAAE,OAAO;4BAChB,OAAO,EAAE,QAAQ;4BACjB,OAAO,EAAE,OAAO;4BAChB,OAAO,EAAE,MAAM;yBACf,CAAC,CAAC;wBAEH,QAAQ,GAAG,OAAO,CAAC;wBACnB,SAAS,GAAG,QAAQ,CAAC;qBACrB;gBACF,CAAC,CAAC,CAAA;gBAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC9B;SACD;IACF,CAAC;;AA1GD;;;;WAAkC,YAAY;GAAC;AAC/C;;;;WAA0C,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;GAAC","sourcesContent":["import { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { CandlestickSeries } from \"../../xy/series/CandlestickSeries\";\r\n\r\nimport type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IHeikinAshiSettings extends IChartIndicatorSettings {\r\n\r\n\t/**\r\n\t * Increasing color.\r\n\t */\r\n\tincreasingColor?: Color;\r\n\r\n\t/**\r\n\t * Decreasing color.\r\n\t */\r\n\tdecreasingColor?: Color;\r\n\r\n}\r\n\r\nexport interface IHeikinAshiPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IHeikinAshiEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class HeikinAshi extends ChartIndicator {\r\n\tpublic static className: string = \"HeikinAshi\";\r\n\tpublic static classNames: Array<string> = ChartIndicator.classNames.concat([HeikinAshi.className]);\r\n\r\n\tdeclare public _settings: IHeikinAshiSettings;\r\n\tdeclare public _privateSettings: IHeikinAshiPrivate;\r\n\tdeclare public _events: IHeikinAshiEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: CandlestickSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"increasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Increasing\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"decreasingColor\",\r\n\t\tname: this.root.language.translateAny(\"Decreasing\"),\r\n\t\ttype: \"color\"\r\n\t}];\r\n\r\n\r\n\tpublic _afterNew() {\r\n\t\tthis._themeTags.push(\"heikinashi\");\r\n\t\tsuper._afterNew();\r\n\t}\r\n\r\n\tpublic _createSeries(): CandlestickSeries {\r\n\t\treturn this.panel.series.push(CandlestickSeries.new(this._root, {\r\n\t\t\tthemeTags: [\"indicator\"],\r\n\t\t\txAxis: this.xAxis,\r\n\t\t\tyAxis: this.yAxis,\r\n\t\t\tvalueXField: \"valueX\",\r\n\t\t\topenValueYField: \"value_o\",\r\n\t\t\tvalueYField: \"value_y\",\r\n\t\t\tlowValueYField: \"value_l\",\r\n\t\t\thighValueYField: \"value_h\",\r\n\t\t\tstroke: this.get(\"seriesColor\"),\r\n\t\t\tfill: undefined\r\n\t\t}))\r\n\t}\r\n\r\n\tpublic _updateChildren() {\r\n\t\tsuper._updateChildren();\r\n\r\n\t\tconst increasingColor = \"increasingColor\";\r\n\t\tconst decreasingColor = \"decreasingColor\";\r\n\r\n\t\tif (this.isDirty(increasingColor) || this.isDirty(decreasingColor)) {\r\n\t\t\tconst template = this.series.columns.template;\r\n\t\t\tconst increasing = this.get(increasingColor);\r\n\t\t\tconst decreasing = this.get(decreasingColor);\r\n\t\t\ttemplate.states.create(\"riseFromPrevious\", { fill: increasing, stroke: increasing });\r\n\t\t\ttemplate.states.create(\"dropFromPrevious\", { fill: decreasing, stroke: decreasing });\r\n\t\t\tthis.markDataDirty();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tif (this.series) {\r\n\t\t\tthis.set(\"field\", \"hl/2\");\r\n\r\n\t\t\tconst dataItems = this.get(\"stockSeries\").dataItems;\r\n\r\n\t\t\tif (dataItems.length > 0) {\r\n\t\t\t\tconst data: any = [];\r\n\r\n\t\t\t\tconst firstDataItem = dataItems[0];\r\n\t\t\t\tlet prevOpen = firstDataItem.get(\"openValueY\", 0);\r\n\t\t\t\tlet prevClose = firstDataItem.get(\"valueY\", 0);\r\n\r\n\t\t\t\t$array.each(dataItems, (dataItem) => {\r\n\r\n\t\t\t\t\tconst open = dataItem.get(\"openValueY\");\r\n\t\t\t\t\tconst close = dataItem.get(\"valueY\");\r\n\t\t\t\t\tconst high = dataItem.get(\"highValueY\");\r\n\t\t\t\t\tconst low = dataItem.get(\"lowValueY\");\r\n\r\n\t\t\t\t\tif ($type.isNumber(open) && $type.isNumber(close) && $type.isNumber(high) && $type.isNumber(low)) {\r\n\r\n\t\t\t\t\t\tconst newClose = (open + close + high + low) / 4;\r\n\t\t\t\t\t\tconst newOpen = (prevOpen + prevClose) / 2;\r\n\r\n\t\t\t\t\t\tconst newHigh = Math.max(high, newOpen, newClose);\r\n\t\t\t\t\t\tconst newLow = Math.min(low, newOpen, newClose);\r\n\r\n\t\t\t\t\t\tdata.push({\r\n\t\t\t\t\t\t\tvalueX: dataItem.get(\"valueX\"),\r\n\t\t\t\t\t\t\tvalue_o: newOpen,\r\n\t\t\t\t\t\t\tvalue_y: newClose,\r\n\t\t\t\t\t\t\tvalue_h: newHigh,\r\n\t\t\t\t\t\t\tvalue_l: newLow\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tprevOpen = newOpen;\r\n\t\t\t\t\t\tprevClose = newClose;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthis.series.data.setAll(data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"]}