{"version":3,"file":"AccelerationBands.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/AccelerationBands.ts"],"names":[],"mappings":"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","sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\n\r\nimport { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents } from \"./Indicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IAccelerationBandsSettings extends IIndicatorSettings {\r\n    /**\r\n     * A color for upper section.\r\n     */\r\n    upperColor?: Color;\r\n\r\n    /**\r\n     * A color for lower section.\r\n     */\r\n    lowerColor?: Color;\r\n\r\n\r\n    factor?: number;\r\n}\r\n\r\nexport interface IAccelerationBandsPrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IAccelerationBandsEvents extends IIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class AccelerationBands extends Indicator {\r\n    public static className: string = \"AccelerationBands\";\r\n    public static classNames: Array<string> = Indicator.classNames.concat([AccelerationBands.className]);\r\n\r\n    declare public _settings: IAccelerationBandsSettings;\r\n    declare public _privateSettings: IAccelerationBandsPrivate;\r\n    declare public _events: IAccelerationBandsEvents;\r\n\r\n    /**\r\n     * Indicator series for the upper band.\r\n     */\r\n    public upperBandSeries!: LineSeries;\r\n\r\n    /**\r\n     * Indicator series for the lower band.\r\n     */\r\n    public lowerBandSeries!: LineSeries;\r\n\r\n    public _editableSettings: IIndicatorEditableSetting[] = [{\r\n        key: \"period\",\r\n        name: this.root.language.translateAny(\"Period\"),\r\n        type: \"number\"\r\n    }, {\r\n        key: \"factor\",\r\n        name: this.root.language.translateAny(\"Factor\"),\r\n        type: \"number\"\r\n    }, {\r\n        key: \"upperColor\",\r\n        name: this.root.language.translateAny(\"Upper\"),\r\n        type: \"color\"\r\n    }, {\r\n        key: \"seriesColor\",\r\n        name: this.root.language.translateAny(\"Average\"),\r\n        type: \"color\"\r\n    }, {\r\n        key: \"lowerColor\",\r\n        name: this.root.language.translateAny(\"Lower\"),\r\n        type: \"color\"\r\n    }];\r\n\r\n    protected _afterNew() {\r\n\r\n        const stockSeries = this.get(\"stockSeries\");\r\n        const chart = stockSeries.chart;\r\n\r\n        if (chart) {\r\n\r\n            const series = chart.series.push(LineSeries.new(this._root, {\r\n                valueXField: \"valueX\",\r\n                valueYField: \"average\",\r\n                groupDataDisabled: true,\r\n                calculateAggregates: true,\r\n                xAxis: stockSeries.get(\"xAxis\"),\r\n                yAxis: stockSeries.get(\"yAxis\"),\r\n                themeTags: [\"indicator\", \"accelerationbands\", \"average\"]\r\n            }))\r\n\r\n            series.setPrivate(\"baseValueSeries\", stockSeries);\r\n            this.series = series;\r\n\r\n            const upperBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n                valueXField: \"valueX\",\r\n                valueYField: \"upper\",\r\n                openValueYField: \"lower\",\r\n                calculateAggregates: true,\r\n                xAxis: stockSeries.get(\"xAxis\"),\r\n                yAxis: stockSeries.get(\"yAxis\"),\r\n                groupDataDisabled: true,\r\n                themeTags: [\"indicator\", \"accelerationbands\", \"upper\"]\r\n            }))\r\n\r\n            upperBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\r\n            this.upperBandSeries = upperBandSeries;\r\n\r\n            const lowerBandSeries = chart.series.push(LineSeries.new(this._root, {\r\n                valueXField: \"valueX\",\r\n                valueYField: \"lower\",\r\n                calculateAggregates: true,\r\n                xAxis: stockSeries.get(\"xAxis\"),\r\n                yAxis: stockSeries.get(\"yAxis\"),\r\n                groupDataDisabled: true,\r\n                themeTags: [\"indicator\", \"accelerationbands\", \"lower\"]\r\n            }))\r\n\r\n            lowerBandSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n            this.lowerBandSeries = lowerBandSeries;\r\n        }\r\n\r\n        this._handleLegend(this.series);\r\n\r\n        super._afterNew();\r\n        this.series.addTag(\"accelerationbands\");\r\n        this.series._applyThemes();\r\n    }\r\n\r\n    public _prepareChildren() {\r\n\r\n        if (this.isDirty(\"factor\")) {\r\n            this.markDataDirty();\r\n            this.setCustomData(\"factor\", this.get(\"factor\"));\r\n        }\r\n\r\n        super._prepareChildren();\r\n    }\r\n\r\n    public _updateChildren() {\r\n        super._updateChildren();\r\n        const upperColor = \"upperColor\";\r\n        if (this.isDirty(upperColor)) {\r\n            const color = this.get(upperColor);\r\n            const upperBandSeries = this.upperBandSeries;\r\n            upperBandSeries.set(\"stroke\", color);\r\n            upperBandSeries.set(\"fill\", color);\r\n            upperBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n            this._updateSeriesColor(upperBandSeries, color, upperColor);\r\n        }\r\n\r\n        const lowerColor = \"lowerColor\";\r\n        if (this.isDirty(lowerColor)) {\r\n            const color = this.get(lowerColor);\r\n            const lowerBandSeries = this.lowerBandSeries;\r\n            lowerBandSeries.set(\"stroke\", color);\r\n            lowerBandSeries.strokes.template.set(\"stroke\", color);\r\n\r\n            this._updateSeriesColor(lowerBandSeries, color, lowerColor);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public prepareData() {\r\n        super.prepareData();\r\n\r\n        if (this.series) {\r\n\r\n            let period = this.get(\"period\", 20);\r\n\r\n            const stockSeries = this.get(\"stockSeries\");\r\n            const dataItems = stockSeries.dataItems;\r\n\r\n            let data = this._getDataArray(dataItems);\r\n            let factor = this.get(\"factor\", 0.001);\r\n\r\n            let i = 0;\r\n\r\n            $array.each(data, (dataItem: any) => {\r\n                let stockDataItem = dataItems[i];\r\n\r\n                if (stockDataItem) {\r\n                    let low = stockDataItem.get(\"lowValueY\");\r\n                    let high = stockDataItem.get(\"highValueY\");\r\n\r\n                    if ($type.isNumber(low) && $type.isNumber(high) && high + low != 0) {\r\n                        dataItem._lower = (high * (1 + 2 * ((((high - low) / ((high + low) / 2)) * 1000) * factor)));\r\n                        dataItem._upper = (low * (1 - 2 * ((((high - low) / ((high + low) / 2)) * 1000) * factor)));\r\n                        dataItem._average = dataItem._lower + (dataItem._upper - dataItem._lower) / 2;\r\n                    }\r\n                }\r\n                i++;\r\n            })\r\n\r\n            this._sma(data, period, \"_lower\", \"lower\");\r\n            this._sma(data, period, \"_upper\", \"upper\");\r\n            this._sma(data, period, \"_average\", \"average\");\r\n\r\n            this.upperBandSeries.data.setAll(data);\r\n            this.lowerBandSeries.data.setAll(data);\r\n            this.series.data.setAll(data);\r\n        }\r\n    }\r\n\r\n    protected _dispose() {\r\n        this.upperBandSeries.dispose();\r\n        this.lowerBandSeries.dispose();\r\n        super._dispose();\r\n    }\r\n\r\n    public async hide(duration?: number): Promise<any> {\r\n        return Promise.all([\r\n            super.hide(duration),\r\n            this.upperBandSeries.hide(duration),\r\n            this.lowerBandSeries.hide(duration)\r\n        ]);\r\n    }\r\n\r\n    public async show(duration?: number): Promise<any> {\r\n        return Promise.all([\r\n            super.show(duration),\r\n            this.upperBandSeries.show(duration),\r\n            this.lowerBandSeries.show(duration)\r\n        ]);\r\n    }\r\n}"]}