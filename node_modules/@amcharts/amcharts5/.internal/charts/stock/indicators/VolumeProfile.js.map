{"version":3,"file":"VolumeProfile.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/VolumeProfile.ts"],"names":[],"mappings":"AAKA,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAC5D,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AACpD,OAAO,EAAE,SAAS,EAAsF,MAAM,aAAa,CAAC;AAC5H,OAAO,EAAE,YAAY,EAAE,MAAM,8BAA8B,CAAC;AAC5D,OAAO,EAAE,OAAO,EAAE,MAAM,4BAA4B,CAAC;AAErD,OAAO,KAAK,KAAK,MAAM,yBAAyB,CAAC;AA2DjD;;;;;GAKG;AACH,MAAM,OAAO,aAAc,SAAQ,SAAS;IAA5C;;QAaC;;;;mBAAwD,CAAC;oBACxD,GAAG,EAAE,WAAW;oBAChB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC;oBAC9C,IAAI,EAAE,UAAU;oBAChB,OAAO,EAAE;wBACR,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE,EAAE,EAAG,iBAAiB,EAAE,CAAC,EAAE;wBACzI,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,eAAe,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,cAAc,EAAE,IAAI,EAAE,iBAAiB,EAAE,GAAG,EAAE;qBAC5I;iBACD,EAAE;oBACF,GAAG,EAAE,OAAO;oBACZ,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC;oBAC9C,IAAI,EAAE,QAAQ;oBACd,QAAQ,EAAE,CAAC;iBACX,EAAE;oBACF,GAAG,EAAE,WAAW;oBAChB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC;oBACnD,IAAI,EAAE,QAAQ;iBACd,EAAE;oBACF,GAAG,EAAE,SAAS;oBACd,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC;oBAClD,IAAI,EAAE,OAAO;iBACb,EAAE;oBACF,GAAG,EAAE,WAAW;oBAChB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC;oBACpD,IAAI,EAAE,OAAO;iBACb,EAAE;oBACF,GAAG,EAAE,WAAW;oBAChB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC;oBAChD,IAAI,EAAE,QAAQ;iBACd,CAAC;WAAC;QAEH;;;;;WAAwC;QAExC;;;;;WAA+B;QAE/B;;;;;WAAqC;IAqatC,CAAC;IAnaU,SAAS;QAClB,KAAK,CAAC,SAAS,EAAE,CAAC;QAElB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAC5C,IAAI,YAAY,EAAE;YACjB,MAAM,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;YAChC,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC;YAExB,IAAI,KAAK,EAAE;gBACV,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,CAAQ,CAAC;gBAE9C,MAAM,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;gBACtC,IAAI,IAAI,KAAK,SAAS,EAAE;oBACvB,MAAM,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;oBACzC,IAAI,CAAC,iBAAyB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,GAAG,CAAC;oBAClE,IAAI,CAAC,iBAAyB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,GAAG,GAAG,GAAG,CAAC;iBAC5E;gBACD,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,IAAY,EAAE,EAAE;oBACxC,MAAM,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;oBACrB,IAAI,CAAC,iBAAyB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,cAAc,GAAG,GAAG,CAAC;oBAClE,IAAI,CAAC,iBAAyB,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,iBAAiB,GAAG,GAAG,GAAG,GAAG,CAAC;gBAC7E,CAAC,CAAC,CAAC;gBAEH,MAAM,UAAU,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,CAA4B,CAAC;gBAEvE,UAAU,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,EAAE;oBAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAA;gBACF,UAAU,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE;oBACzB,IAAI,CAAC,aAAa,EAAE,CAAC;gBACtB,CAAC,CAAC,CAAA;gBAEF,MAAM,SAAS,GAAG,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;gBAC9C,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;gBACjD,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;gBAEnD,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,EAAE;oBACjD,QAAQ,EAAE,KAAK;oBACf,YAAY,EAAE,IAAI;oBAClB,IAAI,EAAE,KAAK;oBACX,IAAI,EAAE,KAAK;oBACX,QAAQ,EAAE,SAAS;iBACnB,CAAC,CAAC,CAAC;gBAEJ,IAAI,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE;oBAC1C,SAAS,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;oBAChC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;wBACjB,CAAC,EAAE,OAAO,CAAC,GAAG,CAAC;wBACf,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC;qBACrB,CAAC,CAAA;iBACF;gBAED,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE;oBACzD,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,KAAK,EAAE,KAAK;oBACZ,WAAW,EAAC,KAAK;oBACjB,WAAW,EAAE,MAAM;oBACnB,eAAe,EAAE,OAAO;oBACxB,eAAe,EAAE,OAAO;oBACxB,WAAW,EAAE,GAAG;oBAChB,mBAAmB,EAAE,IAAI;oBACzB,SAAS,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE,MAAM,CAAC;iBACjD,CAAC,CAAC,CAAA;gBAGH,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,EAAE;oBAC3D,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,KAAK,EAAE,KAAK;oBACZ,WAAW,EAAC,KAAK;oBACjB,WAAW,EAAE,OAAO;oBACpB,eAAe,EAAE,MAAM;oBACvB,eAAe,EAAE,OAAO;oBACxB,WAAW,EAAE,GAAG;oBAChB,mBAAmB,EAAE,IAAI;oBACzB,SAAS,EAAE,CAAC,WAAW,EAAE,eAAe,EAAE,IAAI,CAAC;iBAC/C,CAAC,CAAC,CAAA;gBAEH,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;gBACpD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;gBAElD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;gBACzD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;gBAEvD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBAEhC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACpC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;aACtC;SACD;IACF,CAAC;IAES,iBAAiB,CAAC,MAAoB;QAC/C,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC,CAAC,EAAE,EAAE;YACtD,IAAI,QAAQ,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC;YAEjC,IAAI,QAAQ,EAAE;gBACb,IAAI,QAAQ,CAAC,SAAS,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACxC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC5E,IAAI,QAAQ,EAAE;wBACb,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAiB,CAAC,CAAC;wBAC/C,IAAI,MAAM,EAAE;4BACX,MAAM,CAAC,KAAK,EAAE,CAAC;4BACf,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;yBAC9B;qBACD;iBACD;qBACI;oBACJ,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAC5E,IAAI,QAAQ,EAAE;wBACb,MAAM,MAAM,GAAG,QAAQ,CAAC,GAAG,CAAC,UAAiB,CAAC,CAAC;wBAC/C,IAAI,MAAM,EAAE;4BACX,MAAM,CAAC,KAAK,EAAE,CAAC;4BACf,IAAI,CAAC,eAAe,GAAG,MAAM,CAAC;yBAC9B;qBACD;iBACD;gBAED,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;aACxC;QACF,CAAC,CAAC,CAAA;QAEF,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC,YAAY,EAAE,GAAG,EAAE;YACpD,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;YACzC,IAAI,IAAI,CAAC,eAAe,EAAE;gBACzB,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;aAC/B;QACF,CAAC,CAAC,CAAA;QAEF,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE;YAC3E,MAAM,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;YACjC,IAAI,QAAQ,EAAE;gBACb,MAAM,WAAW,GAAG,QAAQ,CAAC,WAAkB,CAAC;gBAChD,IAAI,WAAW,EAAE;oBAChB,IAAI,WAAW,CAAC,IAAI,EAAE;wBACrB,OAAO,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;qBACxC;iBACD;aACD;YACD,OAAO,WAAW,CAAC;QACpB,CAAC,CAAC,CAAA;IACH,CAAC;IAEM,eAAe;QACrB,IAAI,IAAI,CAAC,MAAM,EAAE;YAChB,KAAK,CAAC,eAAe,EAAE,CAAC;YAExB,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBACpF,IAAI,CAAC,aAAa,EAAE,CAAC;aACrB;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACxC,IAAI,SAAS,IAAI,OAAO,EAAE;oBACzB,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;oBAC5C,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,CAAC,OAAO,CAAQ,CAAC;oBAC9C,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,CAAC;iBACzE;qBACI;oBACJ,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC;iBACvC;aACD;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;gBAC5B,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;gBACpC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;gBACnC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;gBAErC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;oBACrC,IAAI,EAAE,OAAO;oBACb,MAAM,EAAE,OAAO;iBACf,CAAC,CAAC;gBAEH,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;aACvC;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAC9B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACxC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;gBACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;gBAErC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC;oBACnC,IAAI,EAAE,SAAS;oBACf,MAAM,EAAE,SAAS;iBACjB,CAAC,CAAC;gBAEH,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;aAC3C;YAED,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;gBAC9B,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;aAC5D;SAED;IACF,CAAC;IAED;;OAEG;IACI,WAAW;QACjB,MAAM,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAE5C,IAAI,YAAY,IAAI,IAAI,CAAC,MAAM,EAAE;YAChC,IAAI,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,oBAAoB,EAAE,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;YAC1F,IAAI,QAAQ,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;YAEvC,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YACpC,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACnC,IAAI,IAAI,GAAG,CAAC,CAAC;YAEb,IAAI,GAAG,GAAG,QAAQ,CAAC;YACnB,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC;YAEpB,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;gBAC3C,MAAM,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAC1C,IAAI,QAAQ,EAAE;oBACb,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;oBACrC,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;wBAC1B,IAAI,KAAK,GAAG,GAAG,EAAE;4BAChB,GAAG,GAAG,KAAK,CAAC;yBACZ;wBAED,IAAI,KAAK,GAAG,GAAG,EAAE;4BAChB,GAAG,GAAG,KAAK,CAAC;yBACZ;qBACD;iBACD;aACD;YAED,IAAI,GAAG,IAAI,QAAQ,EAAE;gBAEpB,IAAI,IAAY,CAAC;gBACjB,IAAI,IAAI,IAAI,OAAO,EAAE;oBACpB,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC;oBACnB,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;oBACpC,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;oBACnC,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC;iBAC1B;qBACI;oBACJ,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,KAAK,CAAC;oBAC3B,IAAI,GAAG,KAAK,CAAC;iBACb;gBAED,MAAM,WAAW,GAAkB,EAAE,CAAC;gBACtC,MAAM,SAAS,GAAkB,EAAE,CAAC;gBAEpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;oBAC9B,WAAW,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;oBACnB,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;iBACjB;gBAED,IAAI,gBAAgB,CAAC;gBACrB,KAAK,IAAI,CAAC,GAAG,UAAU,EAAE,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,EAAE;oBAC3C,MAAM,QAAQ,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC1C,MAAM,cAAc,GAAG,YAAY,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACjD,IAAI,QAAQ,IAAI,cAAc,EAAE;wBAC/B,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBACrC,MAAM,MAAM,GAAG,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;wBAE5C,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;4BACpD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;4BAC7C,IAAI,KAAK,IAAI,KAAK,EAAE;gCACnB,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;6BAClB;4BAED,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;gCAC1B,IAAI,gBAAgB,IAAI,gBAAgB,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,GAAG,KAAK,EAAE;oCACtE,WAAW,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;iCAC7B;qCACI;oCACJ,SAAS,CAAC,KAAK,CAAC,IAAI,MAAM,CAAC;iCAC3B;6BACD;yBACD;wBACD,gBAAgB,GAAG,QAAQ,CAAC;qBAC5B;iBACD;gBAED,MAAM,QAAQ,GAAG,EAAE,CAAC;gBACpB,IAAI,GAAG,GAAG,CAAC,CAAC;gBACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;oBAC9B,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC1C,GAAG,IAAI,KAAK,CAAC;oBAEb,QAAQ,CAAC,IAAI,CAAC;wBACb,KAAK,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI;wBACrB,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;wBACvB,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;wBAChB,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;wBACpB,KAAK,EAAE,KAAK;wBACZ,KAAK,EAAE,CAAC;wBACR,IAAI,EAAE,KAAK;qBACX,CAAC,CAAA;iBACF;gBAED,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;gBAClC,IAAI,GAAG,IAAI,GAAG,IAAI,QAAQ,CAAC,MAAM,EAAE;oBAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;wBAC7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC1C;iBACD;qBACI;oBACJ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;iBAClC;gBAED,MAAM,MAAM,GAAG,EAAE,CAAC;gBAElB,IAAI,OAAO,GAAG,CAAC,CAAC;gBAChB,IAAI,EAAE,GAAG,CAAC,CAAC;gBAEX,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,EAAE,CAAC,EAAE,EAAE;oBAC9B,IAAI,KAAK,GAAG,SAAS,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;oBAC1C,MAAM,CAAC,IAAI,CAAC;wBACX,KAAK,EAAE,GAAG,GAAG,CAAC,GAAG,IAAI;wBACrB,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI;wBACvB,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC;wBAChB,IAAI,EAAE,WAAW,CAAC,CAAC,CAAC;wBACpB,KAAK,EAAE,KAAK;wBACZ,IAAI,EAAE,KAAK;qBACX,CAAC,CAAA;oBAEF,IAAI,KAAK,GAAG,OAAO,EAAE;wBACpB,OAAO,GAAG,KAAK,CAAC;wBAChB,EAAE,GAAG,CAAC,CAAC;qBACP;iBACD;gBAED,IAAI,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;gBACtD,IAAI,IAAI,GAAG,OAAO,CAAC;gBAEnB,IAAI,EAAE,GAAG,CAAC,CAAC;gBACX,IAAI,EAAE,GAAG,CAAC,CAAC;gBACX,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;gBAEzB,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;gBACvB,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;gBAEzB,aAAa;gBACb,OAAO,IAAI,GAAG,SAAS,EAAE;oBACxB,IAAI,SAAS,GAAG,EAAE,GAAG,EAAE,CAAC;oBACxB,IAAI,QAAQ,GAAG,CAAC,CAAA;oBAChB,IAAI,SAAS,GAAG,IAAI,EAAE;wBACrB,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;qBACpC;oBAED,IAAI,SAAS,GAAG,EAAE,GAAG,EAAE,CAAC;oBAExB,IAAI,QAAQ,GAAG,CAAC,CAAA;oBAChB,IAAI,SAAS,IAAI,CAAC,EAAE;wBACnB,QAAQ,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC;qBACpC;oBAED,IAAI,QAAQ,IAAI,QAAQ,EAAE;wBACzB,IAAI,IAAI,QAAQ,CAAC;wBACjB,IAAI,SAAS,GAAG,IAAI,EAAE;4BACrB,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;4BAChC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;4BAC9B,EAAE,EAAE,CAAC;yBACL;qBACD;yBACI;wBACJ,IAAI,IAAI,QAAQ,CAAC;wBACjB,IAAI,SAAS,IAAI,CAAC,EAAE;4BACnB,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;4BAChC,MAAM,CAAC,SAAS,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;4BAC9B,EAAE,EAAE,CAAC;yBACL;qBACD;oBAED,IAAI,QAAQ,IAAI,CAAC,EAAE;wBAClB,EAAE,EAAE,CAAC;qBACL;oBACD,IAAI,QAAQ,IAAI,CAAC,EAAE;wBAClB,EAAE,EAAE,CAAC;qBACL;oBAED,IAAI,CAAC,EAAE,GAAG,IAAI,IAAI,EAAE,GAAG,IAAI,CAAC,EAAE;wBAC7B,MAAM;qBACN;iBACD;gBAED,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEvB,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;gBAChC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,MAAM,EAAE;oBACpC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;wBAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;qBAC1C;iBACD;qBACI;oBACJ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;iBAClC;aACD;iBACG;gBACH,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;gBAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;aACzB;SACD;QAED,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACnC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,EAAE;YACrC,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACH,CAAC;IAES,QAAQ;QACjB,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,QAAQ,EAAE;YAClB,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;SACxB;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACf,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;SACrB;IACF,CAAC;;AAndD;;;;WAAkC,eAAe;GAAC;AAClD;;;;WAA0C,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;GAAC","sourcesContent":["import type { DateAxis } from \"../../xy/axes/DateAxis\";\r\nimport type { Color } from \"../../../core/util/Color\";\r\nimport type { Graphics } from \"../../../core/render/Graphics\";\r\nimport type { XYSeries } from \"../../xy/series/XYSeries\";\r\n\r\nimport { AxisRendererX } from \"../../xy/axes/AxisRendererX\";\r\nimport { ValueAxis } from \"../../xy/axes/ValueAxis\";\r\nimport { Indicator, IIndicatorSettings, IIndicatorPrivate, IIndicatorEvents, IIndicatorEditableSetting } from \"./Indicator\";\r\nimport { ColumnSeries } from \"../../xy/series/ColumnSeries\";\r\nimport { percent } from \"../../../core/util/Percent\";\r\n\r\nimport * as $type from \"../../../core/util/Type\";\r\n\r\nexport interface IVolumeProfileSettings extends IIndicatorSettings {\r\n\t/**\r\n\t * Volume up color.\r\n\t */\r\n\tupColor?: Color;\r\n\r\n\t/**\r\n\t * Volume down color.\r\n\t */\r\n\tdownColor?: Color;\r\n\r\n\t/**\r\n\t * Type of count.\r\n\t */\r\n\tcountType?: \"rows\" | \"ticks\";\r\n\r\n\t/**\r\n\t * Number of rows or number of ticks, depending on the countType.\r\n\t *\r\n\t * @default 24\r\n\t */\r\n\tcount?: number;\r\n\r\n\t/**\r\n\t * Max width of columns in percent (%).\r\n\t * \r\n\t * @default 40\r\n\t */\r\n\taxisWidth?: number;\r\n\r\n\t/**\r\n\t * Specifies what percentage of all volume for the trading session should\r\n\t * be highlighted by Value Area.\r\n\t * \r\n\t * @default 70\r\n\t */\r\n\tvalueArea?: number;\r\n\r\n\t/**\r\n\t * Opacity of columns which fall withing value area.\r\n\t * \r\n\t * @default .7\r\n\t */\r\n\tvalueAreaOpacity?: number;\r\n\r\n\t/**\r\n\t * Chart's main volume series.\r\n\t */\r\n\tvolumeSeries: XYSeries;\r\n}\r\n\r\nexport interface IVolumeProfilePrivate extends IIndicatorPrivate {\r\n}\r\n\r\nexport interface IVolumeProfileEvents extends IIndicatorEvents {\r\n}\r\n\r\n/**\r\n * An implementation of a Volume Profile indicator for a [[StockChart]].\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n * @since 5.7.0\r\n */\r\nexport class VolumeProfile extends Indicator {\r\n\tpublic static className: string = \"VolumeProfile\";\r\n\tpublic static classNames: Array<string> = Indicator.classNames.concat([VolumeProfile.className]);\r\n\r\n\tdeclare public _settings: IVolumeProfileSettings;\r\n\tdeclare public _privateSettings: IVolumeProfilePrivate;\r\n\tdeclare public _events: IVolumeProfileEvents;\r\n\r\n\t/**\r\n\t * Indicator series.\r\n\t */\r\n\tdeclare public series: ColumnSeries;\r\n\r\n\tpublic _editableSettings: IIndicatorEditableSetting[] = [{\r\n\t\tkey: \"countType\",\r\n\t\tname: this.root.language.translateAny(\"Count\"),\r\n\t\ttype: \"dropdown\",\r\n\t\toptions: [\r\n\t\t\t{ value: \"rows\", text: this.root.language.translateAny(\"number of rows\"), extTarget: \"count\", extTargetValue: 24 , extTargetMinValue: 1 },\r\n\t\t\t{ value: \"ticks\", text: this.root.language.translateAny(\"ticks per row\"), extTarget: \"count\", extTargetValue: 1000, extTargetMinValue: 200 }\r\n\t\t]\r\n\t}, {\r\n\t\tkey: \"count\",\r\n\t\tname: this.root.language.translateAny(\"Count\"),\r\n\t\ttype: \"number\",\r\n\t\tminValue: 1\r\n\t}, {\r\n\t\tkey: \"valueArea\",\r\n\t\tname: this.root.language.translateAny(\"Value Area\"),\r\n\t\ttype: \"number\"\r\n\t}, {\r\n\t\tkey: \"upColor\",\r\n\t\tname: this.root.language.translateAny(\"Up volume\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"downColor\",\r\n\t\tname: this.root.language.translateAny(\"Down volume\"),\r\n\t\ttype: \"color\"\r\n\t}, {\r\n\t\tkey: \"axisWidth\",\r\n\t\tname: this.root.language.translateAny(\"Width %\"),\r\n\t\ttype: \"number\"\r\n\t}];\r\n\r\n\tpublic xAxis!: ValueAxis<AxisRendererX>;\r\n\r\n\tpublic upSeries!: ColumnSeries;\r\n\r\n\tprotected _previousColumn?: Graphics;\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\tif (volumeSeries) {\r\n\t\t\tconst chart = stockSeries.chart;\r\n\t\t\tconst root = this._root;\r\n\r\n\t\t\tif (chart) {\r\n\t\t\t\tconst yAxis = stockSeries.get(\"yAxis\") as any;\r\n\r\n\t\t\t\tconst step = yAxis.getPrivate(\"step\");\r\n\t\t\t\tif (step !== undefined) {\r\n\t\t\t\t\tconst val = yAxis.getPrivate(\"step\") * 50;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetValue = val;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetMinValue = val * 0.2;\r\n\t\t\t\t}\r\n\t\t\t\tyAxis.onPrivate(\"step\", (step: number) => {\r\n\t\t\t\t\tconst val = step * 50;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetValue = val;\r\n\t\t\t\t\t(this._editableSettings as any)[0].options[1].extTargetMinValue = val * 0.2;\r\n\t\t\t\t});\r\n\r\n\t\t\t\tconst panelXAxis = stockSeries.get(\"xAxis\") as DateAxis<AxisRendererX>;\r\n\r\n\t\t\t\tpanelXAxis.on(\"start\", () => {\r\n\t\t\t\t\tthis.markDataDirty();\r\n\t\t\t\t})\r\n\t\t\t\tpanelXAxis.on(\"end\", () => {\r\n\t\t\t\t\tthis.markDataDirty();\r\n\t\t\t\t})\r\n\r\n\t\t\t\tconst xRenderer = AxisRendererX.new(root, {});\r\n\t\t\t\txRenderer.grid.template.set(\"forceHidden\", true);\r\n\t\t\t\txRenderer.labels.template.set(\"forceHidden\", true);\r\n\r\n\t\t\t\tthis.xAxis = chart.xAxes.push(ValueAxis.new(root, {\r\n\t\t\t\t\tzoomable: false,\r\n\t\t\t\t\tstrictMinMax: true,\r\n\t\t\t\t\tpanX: false,\r\n\t\t\t\t\tpanY: false,\r\n\t\t\t\t\trenderer: xRenderer\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tif (yAxis.get(\"renderer\").get(\"opposite\")) {\r\n\t\t\t\t\txRenderer.set(\"inversed\", true);\r\n\t\t\t\t\tthis.xAxis.setAll({\r\n\t\t\t\t\t\tx: percent(100),\r\n\t\t\t\t\t\tcenterX: percent(100)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.series = chart.series.unshift(ColumnSeries.new(root, {\r\n\t\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\t\tyAxis: yAxis,\r\n\t\t\t\t\tsnapTooltip:false,\r\n\t\t\t\t\tvalueXField: \"down\",\r\n\t\t\t\t\topenValueXField: \"xOpen\",\r\n\t\t\t\t\topenValueYField: \"yOpen\",\r\n\t\t\t\t\tvalueYField: \"y\",\r\n\t\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\t\tthemeTags: [\"indicator\", \"volumeprofile\", \"down\"]\r\n\t\t\t\t}))\r\n\r\n\r\n\t\t\t\tthis.upSeries = chart.series.unshift(ColumnSeries.new(root, {\r\n\t\t\t\t\txAxis: this.xAxis,\r\n\t\t\t\t\tyAxis: yAxis,\r\n\t\t\t\t\tsnapTooltip:false,\r\n\t\t\t\t\tvalueXField: \"total\",\r\n\t\t\t\t\topenValueXField: \"down\",\r\n\t\t\t\t\topenValueYField: \"yOpen\",\r\n\t\t\t\t\tvalueYField: \"y\",\r\n\t\t\t\t\tcalculateAggregates: true,\r\n\t\t\t\t\tthemeTags: [\"indicator\", \"volumeprofile\", \"up\"]\r\n\t\t\t\t}))\r\n\r\n\t\t\t\tthis.upSeries.setPrivate(\"doNotUpdateLegend\", true);\r\n\t\t\t\tthis.series.setPrivate(\"doNotUpdateLegend\", true);\r\n\r\n\t\t\t\tthis.upSeries.setPrivate(\"baseValueSeries\", stockSeries);\r\n\t\t\t\tthis.series.setPrivate(\"baseValueSeries\", stockSeries);\r\n\r\n\t\t\t\tthis._handleLegend(this.series);\r\n\r\n\t\t\t\tthis._addInteractivity(this.series);\r\n\t\t\t\tthis._addInteractivity(this.upSeries);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _addInteractivity(series: ColumnSeries) {\r\n\t\tseries.columns.template.events.on(\"pointerover\", (e) => {\r\n\t\t\tlet dataItem = e.target.dataItem;\r\n\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tif (dataItem.component == this.upSeries) {\r\n\t\t\t\t\tdataItem = this.series.dataItems[this.upSeries.dataItems.indexOf(dataItem)];\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tconst column = dataItem.get(\"graphics\" as any);\r\n\t\t\t\t\t\tif (column) {\r\n\t\t\t\t\t\t\tcolumn.hover();\r\n\t\t\t\t\t\t\tthis._previousColumn = column;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tdataItem = this.upSeries.dataItems[this.series.dataItems.indexOf(dataItem)];\r\n\t\t\t\t\tif (dataItem) {\r\n\t\t\t\t\t\tconst column = dataItem.get(\"graphics\" as any);\r\n\t\t\t\t\t\tif (column) {\r\n\t\t\t\t\t\t\tcolumn.hover();\r\n\t\t\t\t\t\t\tthis._previousColumn = column;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.series.updateLegendValue(dataItem);\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tseries.columns.template.events.on(\"pointerout\", () => {\r\n\t\t\tthis.series.updateLegendValue(undefined);\r\n\t\t\tif (this._previousColumn) {\r\n\t\t\t\tthis._previousColumn.unhover();\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tseries.columns.template.adapters.add(\"fillOpacity\", (fillOpacity, target) => {\r\n\t\t\tconst dataItem = target.dataItem;\r\n\t\t\tif (dataItem) {\r\n\t\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\t\tif (dataContext) {\r\n\t\t\t\t\tif (dataContext.area) {\r\n\t\t\t\t\t\treturn this.get(\"valueAreaOpacity\", .7);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn fillOpacity;\r\n\t\t})\r\n\t}\r\n\r\n\tpublic _updateChildren(): void {\r\n\t\tif (this.series) {\r\n\t\t\tsuper._updateChildren();\r\n\r\n\t\t\tif (this.isDirty(\"count\") || this.isDirty(\"countType\") || this.isDirty(\"valueArea\")) {\r\n\t\t\t\tthis.markDataDirty();\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"countType\")) {\r\n\t\t\t\tconst countType = this.get(\"countType\");\r\n\t\t\t\tif (countType == \"ticks\") {\r\n\t\t\t\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\t\t\t\t\tconst yAxis = stockSeries.get(\"yAxis\") as any;\r\n\t\t\t\t\tthis._editableSettings[1].minValue = yAxis.getPrivate(\"step\") * 50 * 0.2;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._editableSettings[1].minValue = 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"upColor\")) {\r\n\t\t\t\tconst upColor = this.get(\"upColor\");\r\n\t\t\t\tthis.upSeries.set(\"fill\", upColor);\r\n\t\t\t\tthis.upSeries.set(\"stroke\", upColor);\r\n\r\n\t\t\t\tthis.upSeries.columns.template.setAll({\r\n\t\t\t\t\tfill: upColor,\r\n\t\t\t\t\tstroke: upColor\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setCustomData(\"upColor\", upColor);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"downColor\")) {\r\n\t\t\t\tconst downColor = this.get(\"downColor\");\r\n\t\t\t\tthis.series.set(\"fill\", downColor);\r\n\t\t\t\tthis.series.set(\"stroke\", downColor);\r\n\r\n\t\t\t\tthis.series.columns.template.setAll({\r\n\t\t\t\t\tfill: downColor,\r\n\t\t\t\t\tstroke: downColor\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setCustomData(\"downColor\", downColor);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.isDirty(\"axisWidth\")) {\r\n\t\t\t\tthis.xAxis.set(\"width\", percent(this.get(\"axisWidth\", 40)));\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic prepareData() {\r\n\t\tconst volumeSeries = this.get(\"volumeSeries\");\r\n\t\tconst stockSeries = this.get(\"stockSeries\");\r\n\r\n\t\tif (volumeSeries && this.series) {\r\n\t\t\tlet startIndex = volumeSeries.getPrivate(\"adjustedStartIndex\", volumeSeries.startIndex());\r\n\t\t\tlet endIndex = volumeSeries.endIndex();\r\n\r\n\t\t\tconst count = this.get(\"count\", 20);\r\n\t\t\tconst type = this.get(\"countType\");\r\n\t\t\tlet step = 1;\r\n\r\n\t\t\tlet min = Infinity;\r\n\t\t\tlet max = -Infinity;\r\n\r\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\tconst dataItem = stockSeries.dataItems[i];\r\n\t\t\t\tif (dataItem) {\r\n\t\t\t\t\tconst close = dataItem.get(\"valueY\");\r\n\t\t\t\t\tif ($type.isNumber(close)) {\r\n\t\t\t\t\t\tif (close < min) {\r\n\t\t\t\t\t\t\tmin = close;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (close > max) {\r\n\t\t\t\t\t\t\tmax = close;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (min != Infinity) {\r\n\r\n\t\t\t\tlet rows: number;\r\n\t\t\t\tif (type == \"ticks\") {\r\n\t\t\t\t\tstep = count / 100;\r\n\t\t\t\t\tmin = Math.floor(min / step) * step;\r\n\t\t\t\t\tmax = Math.ceil(max / step) * step;\r\n\t\t\t\t\trows = (max - min) / step;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tstep = (max - min) / count;\r\n\t\t\t\t\trows = count;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst rowDataDown: Array<number> = [];\r\n\t\t\t\tconst rowDataUp: Array<number> = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < rows; i++) {\r\n\t\t\t\t\trowDataDown[i] = 0;\r\n\t\t\t\t\trowDataUp[i] = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet previousDataItem;\r\n\t\t\t\tfor (let i = startIndex; i < endIndex; i++) {\r\n\t\t\t\t\tconst dataItem = stockSeries.dataItems[i];\r\n\t\t\t\t\tconst volumeDataItem = volumeSeries.dataItems[i];\r\n\t\t\t\t\tif (dataItem && volumeDataItem) {\r\n\t\t\t\t\t\tconst close = dataItem.get(\"valueY\");\r\n\t\t\t\t\t\tconst volume = volumeDataItem.get(\"valueY\");\r\n\r\n\t\t\t\t\t\tif ($type.isNumber(close) && $type.isNumber(volume)) {\r\n\t\t\t\t\t\t\tlet index = Math.floor((close - min) / step);\r\n\t\t\t\t\t\t\tif (index == count) {\r\n\t\t\t\t\t\t\t\tindex = count - 1;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ($type.isNumber(index)) {\r\n\t\t\t\t\t\t\t\tif (previousDataItem && previousDataItem.get(\"valueY\", close) < close) {\r\n\t\t\t\t\t\t\t\t\trowDataDown[index] += volume;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\trowDataUp[index] += volume;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpreviousDataItem = dataItem;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst dataDown = [];\r\n\t\t\t\tlet sum = 0;\r\n\t\t\t\tfor (let i = 0; i < rows; i++) {\r\n\t\t\t\t\tlet total = rowDataUp[i] + rowDataDown[i];\r\n\t\t\t\t\tsum += total;\r\n\r\n\t\t\t\t\tdataDown.push({\r\n\t\t\t\t\t\tyOpen: min + i * step,\r\n\t\t\t\t\t\ty: min + (i + 1) * step,\r\n\t\t\t\t\t\tup: rowDataUp[i],\r\n\t\t\t\t\t\tdown: rowDataDown[i],\r\n\t\t\t\t\t\ttotal: total,\r\n\t\t\t\t\t\txOpen: 0,\r\n\t\t\t\t\t\tarea: false\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet len = this.series.data.length;\r\n\t\t\t\tif (len && len == dataDown.length) {\r\n\t\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\t\tthis.series.data.setIndex(i, dataDown[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.series.data.setAll(dataDown);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst dataUp = [];\r\n\r\n\t\t\t\tlet highest = 0;\r\n\t\t\t\tlet hi = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < rows; i++) {\r\n\t\t\t\t\tlet total = rowDataUp[i] + rowDataDown[i];\r\n\t\t\t\t\tdataUp.push({\r\n\t\t\t\t\t\tyOpen: min + i * step,\r\n\t\t\t\t\t\ty: min + (i + 1) * step,\r\n\t\t\t\t\t\tup: rowDataUp[i],\r\n\t\t\t\t\t\tdown: rowDataDown[i],\r\n\t\t\t\t\t\ttotal: total,\r\n\t\t\t\t\t\tarea: false\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tif (total > highest) {\r\n\t\t\t\t\t\thighest = total;\r\n\t\t\t\t\t\thi = i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet valueArea = sum * this.get(\"valueArea\", 70) / 100;\r\n\t\t\t\tlet area = highest;\r\n\r\n\t\t\t\tlet cd = 1;\r\n\t\t\t\tlet cu = 1;\r\n\t\t\t\tlet dlen = dataUp.length;\r\n\r\n\t\t\t\tdataUp[hi].area = true;\r\n\t\t\t\tdataDown[hi].area = true;\r\n\r\n\t\t\t\t// single row\r\n\t\t\t\twhile (area < valueArea) {\r\n\t\t\t\t\tlet rowAbove1 = hi + cu;\r\n\t\t\t\t\tlet sumAbove = 0\r\n\t\t\t\t\tif (rowAbove1 < dlen) {\r\n\t\t\t\t\t\tsumAbove += dataUp[rowAbove1].total;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet rowBelow1 = hi - cd;\r\n\r\n\t\t\t\t\tlet sumBelow = 0\r\n\t\t\t\t\tif (rowBelow1 >= 0) {\r\n\t\t\t\t\t\tsumBelow += dataUp[rowBelow1].total;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (sumBelow <= sumAbove) {\r\n\t\t\t\t\t\tarea += sumAbove;\r\n\t\t\t\t\t\tif (rowAbove1 < dlen) {\r\n\t\t\t\t\t\t\tdataDown[rowAbove1].area = true;\r\n\t\t\t\t\t\t\tdataUp[rowAbove1].area = true;\r\n\t\t\t\t\t\t\tcu++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tarea += sumBelow;\r\n\t\t\t\t\t\tif (rowBelow1 >= 0) {\r\n\t\t\t\t\t\t\tdataDown[rowBelow1].area = true;\r\n\t\t\t\t\t\t\tdataUp[rowBelow1].area = true;\r\n\t\t\t\t\t\t\tcd++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (sumBelow == 0) {\r\n\t\t\t\t\t\tcd++;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sumAbove == 0) {\r\n\t\t\t\t\t\tcu++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ((cd > dlen && cu > dlen)) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tarea = Math.ceil(area);\r\n\r\n\t\t\t\tlen = this.upSeries.data.length;\r\n\t\t\t\tif (len > 0 && len == dataUp.length) {\r\n\t\t\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\t\t\tthis.upSeries.data.setIndex(i, dataUp[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.upSeries.data.setAll(dataUp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tthis.upSeries.data.clear();\r\n\t\t\t\tthis.series.data.clear();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.series.columns.each((column) => {\r\n\t\t\tcolumn._markDirtyKey(\"fillOpacity\")\r\n\t\t})\r\n\r\n\t\tthis.upSeries.columns.each((column) => {\r\n\t\t\tcolumn._markDirtyKey(\"fillOpacity\")\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _dispose() {\r\n\t\tsuper._dispose();\r\n\t\tif (this.upSeries) {\r\n\t\t\tthis.upSeries.dispose();\r\n\t\t}\r\n\r\n\t\tif (this.xAxis) {\r\n\t\t\tthis.xAxis.dispose();\r\n\t\t}\r\n\t}\r\n}"]}