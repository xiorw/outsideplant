{"version":3,"file":"BullBearPower.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/indicators/BullBearPower.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,cAAc,EAA0E,MAAM,kBAAkB,CAAC;AAC1H,OAAO,EAAE,UAAU,EAAE,MAAM,4BAA4B,CAAC;AAExD,OAAO,KAAK,MAAM,MAAM,0BAA0B,CAAC;AAYnD;;;;GAIG;AACH,MAAM,OAAO,aAAc,SAAQ,cAAc;IAAjD;;QAaI;;;;mBAAwD,CAAC;oBACrD,GAAG,EAAE,QAAQ;oBACb,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,QAAQ,CAAC;oBAC/C,IAAI,EAAE,QAAQ;iBACjB,EAAE;oBACC,GAAG,EAAE,aAAa;oBAClB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,CAAC;oBAC9C,IAAI,EAAE,OAAO;iBAChB,CAAC;WAAC;IAoDP,CAAC;IAlDU,SAAS;QACZ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QACtC,KAAK,CAAC,SAAS,EAAE,CAAC;IACtB,CAAC;IAEM,aAAa;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,EAAE;YACrD,SAAS,EAAE,CAAC,WAAW,CAAC;YACxB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,WAAW,EAAE,QAAQ;YACrB,WAAW,EAAE,KAAK;YAClB,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC;YAC/B,IAAI,EAAE,SAAS;SAClB,CAAC,CAAC,CAAA;IACP,CAAC;IAED;;OAEG;IACI,WAAW;QACd,IAAI,IAAI,CAAC,MAAM,EAAE;YAEb,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC;YACpD,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAE9B,IAAI,CAAC,GAAG,CAAC,CAAC;YACV,IAAI,IAAI,GAAe,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC;YAEnC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAE1C,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,QAAQ,EAAE,EAAE;gBAChC,IAAI,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE;oBACjB,IAAI,KAAK,GAAG,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAW,CAAC;oBAC7C,IAAI,KAAK,IAAI,IAAI,EAAE;wBACf,IAAI,GAAG,GAAG,QAAQ,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,CAAW,CAAC;wBACrD,IAAI,IAAI,GAAG,QAAQ,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAW,CAAC;wBAEvD,IAAI,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;wBACtB,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;qBACxC;iBACJ;gBAED,CAAC,EAAE,CAAC;YACR,CAAC,CAAC,CAAA;YAEF,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;SACjC;IACL,CAAC;;AAvED;;;;WAAkC,eAAe;GAAC;AAClD;;;;WAA0C,cAAc,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;GAAC","sourcesContent":["import type { IIndicatorEditableSetting } from \"./Indicator\";\r\n\r\nimport { ChartIndicator, IChartIndicatorSettings, IChartIndicatorPrivate, IChartIndicatorEvents } from \"./ChartIndicator\";\r\nimport { LineSeries } from \"../../xy/series/LineSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IBullBearPowerSettings extends IChartIndicatorSettings {\r\n}\r\n\r\nexport interface IBullBearPowerPrivate extends IChartIndicatorPrivate {\r\n}\r\n\r\nexport interface IBullBearPowerEvents extends IChartIndicatorEvents {\r\n}\r\n\r\n\r\n/**\r\n * An implementation of a [[StockChart]] indicator.\r\n *\r\n * @see {@link https://www.amcharts.com/docs/v5/charts/stock/indicators/} for more info\r\n */\r\nexport class BullBearPower extends ChartIndicator {\r\n    public static className: string = \"BullBearPower\";\r\n    public static classNames: Array<string> = ChartIndicator.classNames.concat([BullBearPower.className]);\r\n\r\n    declare public _settings: IBullBearPowerSettings;\r\n    declare public _privateSettings: IBullBearPowerPrivate;\r\n    declare public _events: IBullBearPowerEvents;\r\n\r\n    /**\r\n     * Indicator series.\r\n     */\r\n    declare public series: LineSeries;\r\n\r\n    public _editableSettings: IIndicatorEditableSetting[] = [{\r\n        key: \"period\",\r\n        name: this.root.language.translateAny(\"Period\"),\r\n        type: \"number\"\r\n    }, {\r\n        key: \"seriesColor\",\r\n        name: this.root.language.translateAny(\"Color\"),\r\n        type: \"color\"\r\n    }];\r\n\r\n    public _afterNew() {\r\n        this._themeTags.push(\"bullbearpower\");\r\n        super._afterNew();\r\n    }\r\n\r\n    public _createSeries(): LineSeries {\r\n        return this.panel.series.push(LineSeries.new(this._root, {\r\n            themeTags: [\"indicator\"],\r\n            xAxis: this.xAxis,\r\n            yAxis: this.yAxis,\r\n            valueXField: \"valueX\",\r\n            valueYField: \"bbp\",\r\n            stroke: this.get(\"seriesColor\"),\r\n            fill: undefined\r\n        }))\r\n    }\r\n\r\n    /**\r\n     * @ignore\r\n     */\r\n    public prepareData() {\r\n        if (this.series) {\r\n\r\n            const dataItems = this.get(\"stockSeries\").dataItems;\r\n            this.setRaw(\"field\", \"close\");\r\n\r\n            let i = 0;\r\n            let data: Array<any> = this._getDataArray(dataItems);\r\n            let period = this.get(\"period\", 3);\r\n\r\n            this._ema(data, period, \"value_y\", \"ema\");\r\n\r\n            $array.each(dataItems, (dataItem) => {\r\n                if (i >= period - 1) {\r\n                    let close = dataItem.get(\"valueY\") as number;\r\n                    if (close != null) {\r\n                        let low = dataItem.get(\"lowValueY\", close) as number;\r\n                        let high = dataItem.get(\"highValueY\", close) as number;\r\n\r\n                        let ema = data[i].ema;\r\n                        data[i].bbp = high - ema + low - ema;\r\n                    }\r\n                }\r\n\r\n                i++;\r\n            })\r\n\r\n            this.series.data.setAll(data);\r\n        }\r\n    }\r\n}"]}