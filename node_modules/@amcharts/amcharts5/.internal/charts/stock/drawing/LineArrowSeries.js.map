{"version":3,"file":"LineArrowSeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/LineArrowSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\nimport { ListTemplate } from \"../../../core/util/List\";\r\nimport { Triangle } from \"../../../core/render/Triangle\";\r\nimport { Template } from \"../../../core/util/Template\";\r\nimport { Bullet } from \"../../../core/render/Bullet\";\r\n\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\nimport type { Container } from \"../../../core/render/Container\";\r\nimport type { DataItem } from \"../../../..\";\r\n\r\nimport * as $math from \"../../../core/util/Math\";\r\nimport * as $array from \"../../../core/util/Array\";\r\nimport * as $object from \"../../../core/util/Object\";\r\n\r\n\r\nexport interface ILineArrowSeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface ILineArrowSeriesSettings extends ISimpleLineSeriesSettings {\r\n\r\n\t/**\r\n\t * Show a dotted line extending from both ends of the drawn line.\r\n\t *\r\n\t * @default true\r\n\t */\r\n\tshowExtension?: boolean;\r\n}\r\n\r\nexport interface ILineArrowSeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\n/**\r\n * Used for Line Arrow drawing tool in [[StockChart]].\r\n *\r\n * @since 5.10.5\r\n */\r\n\r\nexport class LineArrowSeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"LineArrowSeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([LineArrowSeries.className]);\r\n\r\n\tdeclare public _settings: ILineArrowSeriesSettings;\r\n\tdeclare public _privateSettings: ILineArrowSeriesPrivate;\r\n\tdeclare public _dataItemSettings: ILineArrowSeriesDataItem;\r\n\r\n\tprotected _arrows: Array<Triangle> = [];\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\r\n\t\tthis.lines.template.set(\"forceHidden\", true);\r\n\r\n\t\tthis.bullets.push((_root, _series, dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.corner == \"p2\") {\r\n\r\n\t\t\t\tconst index = dataContext.index;\r\n\t\t\t\tconst di = this._di[index][\"e\"] as DataItem<ILineArrowSeriesDataItem>;\r\n\t\t\t\tlet color = this.get(\"strokeColor\", this.get(\"stroke\"));\r\n\r\n\t\t\t\tif (di) {\r\n\t\t\t\t\tconst dc = di.dataContext as any;\r\n\t\t\t\t\tif (dc) {\r\n\t\t\t\t\t\tconst strokeTemplate = dc.stroke;\r\n\t\t\t\t\t\tif (strokeTemplate) {\r\n\t\t\t\t\t\t\tcolor = strokeTemplate.get(\"stroke\");\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\tif (bullets) {\r\n\t\t\t\t\tconst bullet = bullets[0];\r\n\t\t\t\t\tif (bullet) {\r\n\t\t\t\t\t\tconst container = bullet.get(\"sprite\") as Container;\r\n\t\t\t\t\t\tif (container) {\r\n\t\t\t\t\t\t\tconst child = container.children.getIndex(0);\r\n\t\t\t\t\t\t\tif (child) {\r\n\t\t\t\t\t\t\t\tchild.set(\"scale\", .1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst arrow = this.makeArrow();\r\n\r\n\t\t\t\tarrow.setAll({\r\n\t\t\t\t\tforceInactive: true,\r\n\t\t\t\t\tfill: color,\r\n\t\t\t\t\tuserData: dataContext.index\r\n\t\t\t\t});\r\n\r\n\t\t\t\treturn Bullet.new(this._root, {\r\n\t\t\t\t\tsprite: arrow,\r\n\t\t\t\t\tlocationX: undefined\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tpublic clearDrawings(): void {\r\n\t\tsuper.clearDrawings();\r\n\t\tthis.arrows.clear();\r\n\t}\r\n\r\n\tpublic _changed() {\r\n\t\tsuper._changed();\r\n\t\tthis.arrows.each((arrow) => {\r\n\t\t\tconst index = arrow.get(\"userData\");\r\n\t\t\tconst di = this._di[index];\r\n\t\t\tif (di) {\r\n\t\t\t\tconst di1 = this._di[index][\"p1\"];\r\n\t\t\t\tconst di2 = this._di[index][\"p2\"];\r\n\r\n\t\t\t\tconst p1 = di1.get(\"point\");\r\n\t\t\t\tconst p2 = di2.get(\"point\");\r\n\r\n\t\t\t\tif (p1 && p2) {\r\n\t\t\t\t\t// rotate arrow\r\n\t\t\t\t\tconst angle = $math.getAngle(p1, p2) + 90;\r\n\t\t\t\t\tarrow.set(\"rotation\", angle);\r\n\r\n\t\t\t\t\tconst w = arrow.width();\r\n\r\n\t\t\t\t\tconst strokeIndex = this._getStrokeIndex(index);\r\n\t\t\t\t\tconst stroke = this.strokes.getIndex(strokeIndex);\r\n\t\t\t\t\tif (stroke) {\r\n\t\t\t\t\t\tarrow.set(\"scale\", (w + stroke.get(\"strokeWidth\", 2) * 2) / w);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tprotected _applySettings(index: number, settings: { [index: string]: any }) {\r\n\t\tsuper._applySettings(index, settings);\r\n\t\tlet template!: Template<any>;\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext.index == index) {\r\n\t\t\t\tif (dataContext.settings) {\r\n\t\t\t\t\ttemplate = dataContext.settings;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tconst settings2 = $object.copy(settings);\r\n\r\n\t\tif (settings.stroke != undefined) {\r\n\t\t\tsettings2.fill = settings.stroke;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete settings2.fill;\r\n\t\t}\r\n\t\tif (settings.strokeOpacity != undefined) {\r\n\t\t\tsettings2.fillOpacity = settings.strokeOpacity;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tdelete settings2.fillOpacity;\r\n\t\t}\r\n\r\n\t\tsettings2.strokeOpacity = 0;\r\n\r\n\t\tconst arrow = this._getSprite(this.arrows, index);\r\n\t\tif (arrow) {\r\n\t\t\tconst defaultState = arrow.states.lookup(\"default\")!;\r\n\t\t\t$object.each(settings2, (key, value) => {\r\n\t\t\t\tarrow.set(key as any, value);\r\n\t\t\t\tdefaultState.set(key as any, value);\r\n\t\t\t\tif (template) {\r\n\t\t\t\t\ttemplate.set(key, value);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic makeArrow(): Triangle {\r\n\t\tconst arrow = this.arrows.make();\r\n\t\tthis.arrows.push(arrow);\r\n\t\treturn arrow;\r\n\t}\r\n\r\n\tpublic readonly arrows: ListTemplate<Triangle> = this.addDisposer(new ListTemplate(\r\n\t\tTemplate.new({}),\r\n\t\t() => Triangle._new(this._root, { themeTags: [\"arrow\"] }, [this.arrows.template])\r\n\t));\r\n\r\n\r\n\tprotected _updateLine(index: number, p11: IPoint, p22: IPoint, p1: IPoint, p2: IPoint) {\r\n\t\tsuper._updateLine(index, p11, p22, p1, p2);\r\n\t}\r\n}\r\n"]}