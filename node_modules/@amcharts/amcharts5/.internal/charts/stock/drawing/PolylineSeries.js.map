{"version":3,"file":"PolylineSeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/PolylineSeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport type { IPoint } from \"../../../core/util/IPoint\";\r\n\r\nimport { Line } from \"../../../core/render/Line\";\r\nimport { color } from \"../../../core/util/Color\";\r\nimport { DrawingSeries, IDrawingSeriesSettings, IDrawingSeriesPrivate, IDrawingSeriesDataItem } from \"./DrawingSeries\";\r\n\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nexport interface IPolylineSeriesDataItem extends IDrawingSeriesDataItem {\r\n}\r\n\r\nexport interface IPolylineSeriesSettings extends IDrawingSeriesSettings {\r\n\r\n\t/**\r\n\t * Show a closed color-filled shape instead of polyline.\r\n\t * \r\n\t * @default false\r\n\t * @since 5.9.0\r\n\t */\r\n\tfillShape?: boolean;\r\n\r\n\t/**\r\n\t * Number of pre-defined points in a shape.\r\n\t *\r\n\t * The shape will finish drawing once number is reached.\r\n\t * @since 5.9.0\r\n\t */\r\n\tpointCount?: number;\r\n}\r\n\r\nexport interface IPolylineSeriesPrivate extends IDrawingSeriesPrivate {\r\n}\r\n\r\n/**\r\n * Draws a multi-point line (polyline).\r\n */\r\nexport class PolylineSeries extends DrawingSeries {\r\n\tpublic static className: string = \"PolylineSeries\";\r\n\tpublic static classNames: Array<string> = DrawingSeries.classNames.concat([PolylineSeries.className]);\r\n\r\n\tdeclare public _settings: IPolylineSeriesSettings;\r\n\tdeclare public _privateSettings: IPolylineSeriesPrivate;\r\n\tdeclare public _dataItemSettings: IPolylineSeriesDataItem;\r\n\r\n\tprotected _tag = \"polyline\";\r\n\r\n\tprotected _drawingLine: Line = this.mainContainer.children.push(Line.new(this._root, { forceInactive: true }));\r\n\r\n\tpublic _prepareChildren(): void {\r\n\t\tsuper._prepareChildren();\r\n\r\n\t\tthis.strokes.template.setAll({\r\n\t\t\tfill: color(0xffffff),\r\n\t\t\tfillOpacity: 0\r\n\t\t})\r\n\r\n\t\tif (this.isDirty(\"fillShape\")) {\r\n\t\t\tif (this.get(\"fillShape\")) {\r\n\t\t\t\tthis.fills.template.setAll({\r\n\t\t\t\t\tvisible: true,\r\n\t\t\t\t\tforceHidden: false,\r\n\t\t\t\t\tfillOpacity: this.get(\"fillOpacity\"),\r\n\t\t\t\t\tfill: this.get(\"fillColor\")\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.fills.template.setAll({\r\n\t\t\t\t\tvisible: false\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _handlePointerClick(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tsuper._handlePointerClick(event);\r\n\r\n\t\t\tif (event.target.get(\"userData\") == \"grip\") {\r\n\t\t\t\tthis._endPolyline(event.target.dataItem as DataItem<this[\"_dataItemSettings\"]>);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (!this._isDragging) {\r\n\t\t\t\t\tthis.isDrawing(true);\r\n\t\t\t\t\tthis._hideResizer(event.target);\r\n\t\t\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\t\t\t// for consistency with other series\r\n\t\t\t\t\t\tif (this._index == 0) {\r\n\t\t\t\t\t\t\tthis._index = 1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._pIndex == 0) {\r\n\t\t\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\t\t\tconst context = { stroke: this._getStrokeTemplate(), fill: this._getFillTemplate(), index: this._index, corner: \"e\", drawingId: this._drawingId };\r\n\t\t\t\t\t\t\tthis._setContextSprite(context);\r\n\t\t\t\t\t\t\tthis.data.push(context);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis._drawingLine.show();\r\n\t\t\t\t\t\tthis._addPoint(event);\r\n\r\n\t\t\t\t\t\t// add one more if fill\r\n\t\t\t\t\t\tif (this.get(\"fillShape\")) {\r\n\t\t\t\t\t\t\tif (this._pIndex == 1) {\r\n\t\t\t\t\t\t\t\tthis._addPoint(event, true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if (this._pIndex > 1) {\r\n\t\t\t\t\t\t\t\tthis.data.moveValue(this.data.getIndex(this.data.length - 1), this.data.length - 2);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (this._pIndex - 1 == this.get(\"pointCount\", 1000)) {\r\n\t\t\t\t\t\t\tthis._endPolyline();\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._drawingLine.set(\"stroke\", this.get(\"strokeColor\"));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _setContextSprite(context: any) {\r\n\t\tcontext.sprite = this.mainContainer;\r\n\t}\r\n\r\n\tpublic disableDrawing() {\r\n\t\tsuper.disableDrawing();\r\n\t\tthis._endPolyline();\r\n\t}\r\n\r\n\tpublic clearDrawings(): void {\r\n\t\tsuper.clearDrawings();\r\n\t\tthis._drawingLine.hide();\r\n\t}\r\n\r\n\tprotected _addPoint(event: ISpritePointerEvent, closing?: boolean) {\r\n\t\tconst chart = this.chart;\r\n\t\tif (chart) {\r\n\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\r\n\t\t\tconst point = chart.plotContainer.toLocal(event.point);\r\n\r\n\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(point.x)));\r\n\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(point.y)), valueX);\r\n\r\n\t\t\tconst dataItems = this.dataItems;\r\n\t\t\tconst len = dataItems.length;\r\n\r\n\t\t\tthis.data.push({ valueY: valueY, valueX: valueX, index: this._index, corner: this._pIndex, drawingId: this._drawingId, closing: closing });\r\n\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\r\n\t\t\tconst dataItem = dataItems[len];\r\n\t\t\tthis._positionBullets(dataItem);\r\n\t\t\tthis._setXLocation(dataItem, valueX);\r\n\r\n\t\t\tthis._pIndex++;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _endPolyline(dataItem?: DataItem<this[\"_dataItemSettings\"]>) {\r\n\t\tif (!dataItem) {\r\n\t\t\tdataItem = this.dataItems[this.dataItems.length - 1];\r\n\t\t}\r\n\r\n\t\tif (dataItem) {\r\n\t\t\tthis._pIndex = 0;\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\t\tconst index = dataContext.index;\r\n\r\n\t\t\tif (dataContext.corner == 0) {\r\n\t\t\t\tthis.data.push({ valueX: dataItem.get(\"valueX\"), valueY: dataItem.get(\"valueY\"), index: index, corner: \"c\", closing: true, drawingId: this._drawingId })\r\n\r\n\t\t\t\tconst dataItems = this.dataItems;\r\n\t\t\t\tconst len = dataItems.length - 1;\r\n\r\n\t\t\t\tthis.setPrivate(\"startIndex\", 0);\r\n\t\t\t\tthis.setPrivate(\"endIndex\", len);\r\n\r\n\t\t\t\tdataItem = dataItems[len];\r\n\t\t\t\tthis._positionBullets(dataItem);\r\n\t\t\t\tthis._setXLocation(dataItem, dataItem.get(\"valueX\", 0));\r\n\t\t\t}\r\n\r\n\t\t\tthis._drawingLine.hide();\r\n\r\n\t\t\tthis.isDrawing(false);\r\n\t\t\tthis._dispatchAdded();\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _dispatchAdded(): void {\r\n\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t}\r\n\r\n\tprotected _handlePointerMove(event: ISpritePointerEvent) {\r\n\t\tsuper._handlePointerMove(event);\r\n\t\tif (this._isDrawing) {\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (movePoint) {\r\n\t\t\t\tconst dataItems = this.dataItems;\r\n\t\t\t\tconst len = dataItems.length;\r\n\t\t\t\tif (len > 0) {\r\n\t\t\t\t\tconst lastItem = dataItems[len - 1];\r\n\t\t\t\t\tconst points: Array<IPoint> = [];\r\n\r\n\t\t\t\t\tconst point = lastItem.get(\"point\");\r\n\t\t\t\t\tif (point) {\r\n\t\t\t\t\t\tpoints.push(point);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tpoints.push(movePoint);\r\n\r\n\t\t\t\t\tif (this.get(\"fillShape\")) {\r\n\t\t\t\t\t\tconst bLastItem = dataItems[len - 2];\r\n\t\t\t\t\t\tif (bLastItem) {\r\n\t\t\t\t\t\t\tconst bPoint = bLastItem.get(\"point\");\r\n\t\t\t\t\t\t\tif (bPoint) {\r\n\t\t\t\t\t\t\t\tpoints.push(bPoint);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (points.length > 1) {\r\n\t\t\t\t\t\tthis._drawingLine.set(\"points\", points);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprotected _updateElements() {\r\n\t\t$array.each(this.dataItems, (dataItem) => {\r\n\t\t\tconst dataContext = dataItem.dataContext as any;\r\n\t\t\tif (dataContext) {\r\n\t\t\t\tconst closing = dataContext.closing;\r\n\t\t\t\tif (closing) {\r\n\t\t\t\t\tif (this._di[dataContext.index]) {\r\n\t\t\t\t\t\tconst closingDataItem = this._di[dataContext.index][0];\r\n\t\t\t\t\t\tconst valueX = closingDataItem.get(\"valueX\", 0);\r\n\t\t\t\t\t\tconst valueY = closingDataItem.get(\"valueY\");\r\n\r\n\t\t\t\t\t\tthis._setContext(dataItem, \"valueX\", valueX);\r\n\t\t\t\t\t\tthis._setContext(dataItem, \"valueY\", valueY, true);\r\n\r\n\t\t\t\t\t\tthis._setXLocation(dataItem, valueX);\r\n\t\t\t\t\t\tthis._positionBullets(dataItem);\r\n\r\n\t\t\t\t\t\tconst bullets = dataItem.bullets;\r\n\t\t\t\t\t\tif (bullets) {\r\n\t\t\t\t\t\t\t$array.each(bullets, (bullet) => {\r\n\t\t\t\t\t\t\t\tconst sprite = bullet.get(\"sprite\");\r\n\t\t\t\t\t\t\t\tif (sprite) {\r\n\t\t\t\t\t\t\t\t\tsprite.set(\"forceHidden\", true);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * Cancels current drawing\r\n\t *\r\n\t * @since 5.9.0\r\n\t */\r\n\tpublic cancelDrawing() {\r\n\t\tsuper.cancelDrawing();\r\n\t\tthis._drawingLine.hide(0);\r\n\t}\r\n}"]}