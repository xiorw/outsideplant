{"version":3,"file":"HorizontalRaySeries.js","sourceRoot":"","sources":["../../../../../../src/.internal/charts/stock/drawing/HorizontalRaySeries.ts"],"names":[],"mappings":"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","sourcesContent":["import type { ISpritePointerEvent } from \"../../../core/render/Sprite\";\r\nimport type { DataItem } from \"../../../core/render/Component\";\r\nimport * as $array from \"../../../core/util/Array\";\r\n\r\nimport { SimpleLineSeries, ISimpleLineSeriesSettings, ISimpleLineSeriesPrivate, ISimpleLineSeriesDataItem } from \"./SimpleLineSeries\";\r\n\r\nexport interface IHorizontalRaySeriesDataItem extends ISimpleLineSeriesDataItem {\r\n}\r\n\r\nexport interface IHorizontalRaySeriesSettings extends ISimpleLineSeriesSettings {\r\n}\r\n\r\nexport interface IHorizontalRaySeriesPrivate extends ISimpleLineSeriesPrivate {\r\n}\r\n\r\nexport class HorizontalRaySeries extends SimpleLineSeries {\r\n\tpublic static className: string = \"HorizontalRaySeries\";\r\n\tpublic static classNames: Array<string> = SimpleLineSeries.classNames.concat([HorizontalRaySeries.className]);\r\n\r\n\tdeclare public _settings: IHorizontalRaySeriesSettings;\r\n\tdeclare public _privateSettings: IHorizontalRaySeriesPrivate;\r\n\tdeclare public _dataItemSettings: IHorizontalRaySeriesDataItem;\r\n\r\n\tprotected _tag = \"ray\";\r\n\r\n\r\n\tprotected _afterNew() {\r\n\t\tsuper._afterNew();\r\n\t\tthis.lines.template.set(\"forceHidden\", true);\r\n\t}\r\n\r\n\tprotected _handleBulletDragged(event: ISpritePointerEvent) {\r\n\t\tsuper._handleBulletDragged(event);\r\n\r\n\t\tconst dataItem = event.target.dataItem as DataItem<IHorizontalRaySeriesDataItem>;\r\n\t\tconst dataContext = dataItem.dataContext as any;\r\n\r\n\t\tif (dataContext) {\r\n\t\t\tconst index = dataContext.index;\r\n\t\t\tconst diP1 = this._di[index][\"p1\"];\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\t\tconst movePoint = this._movePointerPoint;\r\n\r\n\t\t\tif (diP1 && diP2 && movePoint) {\r\n\t\t\t\tconst yAxis = this.get(\"yAxis\");\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\t\t\tconst valueX = this._getXValue(xAxis.positionToValue(xAxis.coordinateToPosition(movePoint.x)));\r\n\t\t\t\tconst valueY = this._getYValue(yAxis.positionToValue(yAxis.coordinateToPosition(movePoint.y)), valueX);\r\n\r\n\t\t\t\tconst min = xAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = xAxis.getPrivate(\"max\", 1);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueY\", valueY, true);\r\n\t\t\t\tthis._setContext(diP2, \"valueY\", valueY, true);\r\n\r\n\t\t\t\tthis._setContext(diP1, \"valueX\", valueX);\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", max + (max - min));\r\n\r\n\t\t\t\tthis._setXLocation(diP1, diP1.get(\"valueX\", 0));\r\n\r\n\t\t\t\tthis._positionBullets(diP1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic _prepareChildren(): void {\t\r\n\r\n\t\tconst xAxis = this.get(\"xAxis\");\r\n\r\n\t\tconst min = xAxis.getPrivate(\"min\", 0);\r\n\t\tconst max = xAxis.getPrivate(\"max\", 1);\r\n\r\n\t\t$array.each(this._di, (di) => {\r\n\t\t\tif(di){\r\n\t\t\t\tthis._setContext(di[\"p2\"], \"valueX\", max + (max - min), true);\t\t\t\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tsuper._prepareChildren();\r\n\t}\r\n\r\n\tprotected _handlePointerMoveReal() {\r\n\r\n\t}\r\n\r\n\tprotected _updateSegment(index: number) {\r\n\t\tif (this._di[index]) {\r\n\t\t\tconst diP2 = this._di[index][\"p2\"];\r\n\r\n\t\t\tif (diP2) {\r\n\t\t\t\tconst xAxis = this.get(\"xAxis\");\r\n\t\t\t\tconst min = xAxis.getPrivate(\"min\", 0);\r\n\t\t\t\tconst max = xAxis.getPrivate(\"max\", 1);\r\n\r\n\r\n\t\t\t\tthis._setContext(diP2, \"valueX\", max + (max - min), true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\r\n\tprotected _handlePointerClickReal(event: ISpritePointerEvent) {\r\n\t\tif (this._drawingEnabled) {\r\n\t\t\tif (!this._isDragging) {\r\n\t\t\t\tif (this.unselectAllDrawings() == 0) {\r\n\t\t\t\t\tthis._increaseIndex();\r\n\t\t\t\t\tthis._addPoints(event, this._index);\r\n\t\t\t\t\tthis.isDrawing(false);\r\n\t\t\t\t\tthis._hideResizer();\r\n\r\n\t\t\t\t\tthis._updateSegment(this._index);\r\n\t\t\t\t\tthis._dispatchStockEvent(\"drawingadded\", this._drawingId, this._index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"]}